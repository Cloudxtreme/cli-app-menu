# Â©2013 Copyright 2013 Robert D. Chin
#
# +----------------------------------------+
# |             Revision Date              |
# +----------------------------------------+
# REVDATE="September-06-2013 14:21"
#
# +----------------------------------------+
# |  Function f_menu_cat_file_management   |
# +----------------------------------------+
#
#  Inputs: None.
#    Uses: BFM, MAX, MENU_ITEM
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_cat_file_management () {
      f_initvars_menu_app
      until [ $BFM -eq 0 ]
      do    # Start of File Management Application Category until loop.
            #BFM Bin/Hex     - View/Edit binary, hexadecimal files.
            #BFM CD/DVD Burn - Write files to CD/DVD.
            #BFM Compare     - Show differences between text files.
            #BFM Compress    - Compress/uncompress files tar, zip, gz, bz, rar, xz, 7z, etc.
            #BFM Convert     - Convert between different file formats.
            #BFM Edit        - Create/Edit text files.
            #BFM Encryption  - Encrypt/Decrypt files for privacy and security.
            #BFM Find        - File search.
            #BFM FTP/HTTP    - File transfer via FTP, HTTP clients.
            #BFM Managers    - Directory tree views, rename, add/delete, files, folders.
            #BFM Operations  - Copy, move, delete, undelete, and backup, files.
            #BFM Splitters   - File splitters.
            #BFM Viewers     - View files a page at a time.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-filedir.lib"
            MENU_TITLE="File Management Application Category Menu"
            DELIMITER="#BFM" #BFM This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read BFM
            #
            f_menu_item_process $BFM  # Outputs $MENU_ITEM.
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of Application Category case statement.
                 [Bb] | [Bb][Ii]*)
                 f_menu_app_binhex_editors    # Binary-Hexadecimal File Editor Applications Menu.
                 ;;
                 [Cc] | [Cc][Dd]*)
                 f_menu_app_file_burn         # File Burn Applications Menu.
                 ;;
                 [Cc] | [Cc][Oo] | [Cc][Oo][Mm] | [Cc][Oo][Mm][Pp] | [Cc][Oo][Mm][Pp][Aa]*)
                 f_menu_app_text_compare      # Text Compare Application Menu.
                 ;;               
                 [Cc] | [Cc][Oo] | [Cc][Oo][Mm] | [Cc][Oo][Mm][Pp] | [Cc][Oo][Mm][Pp][Rr]*)
                 f_menu_app_file_compression  # File Burn Applications Menu.
                 ;;
                 [Cc] | [Cc][Oo] | [Cc][Oo][Nn]*)
                 f_menu_app_file_conversion   # File Conversion Applications Menu.
                 ;;
                 [Ee] | [Ee][Dd]*)
                 f_menu_app_text_file_editors # Text File Editor Application Menu.
                 ;;
                 [Ee] | [Ee][Nn]*)
                 f_menu_app_file_encryption   # File Encryption Applications Menu.
                 ;;
                 [Ff] | [Ff][Ii]*)
                 f_menu_app_file_find         # File Find Applications Menu.
                 ;;
                 [Ff] | [Ff][Tt]*)
                 f_menu_app_file_transfer     # File Transfer Applications Menu.
                 ;;
                 [Mm] | [Mm][Aa]*)
                 f_menu_app_file_managers     # File Manager Applications Menu.
                 ;;
                 [Oo] | [Oo][Pp]*)
                 f_menu_app_file_operations   # File Operations Applications Menu.
                 ;;
                 [Ss] | [Ss][Pp]*) 
                 f_menu_app_file_splitters    # File Viewers Applications Menu.
                 ;;
                 [Vv] | [Vv][Ii]*)
                 f_menu_app_file_viewers      # File Viewers Applications Menu.
                 ;;
            esac                 # End of File Management Application Category case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM
            #
            BFM=$MENU_ITEM  # Outputs $MENU_ITEM.
            #
      done  # End of File Management Applications until loop.
            #
      unset BFM MENU_ITEM  # Throw out this variable.
} # End of function f_menu_cat_file_management
#
# +----------------------------------------+
# |   Function f_menu_app_binhex_editors   |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MBH, MAX, MENU_ITEM.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_binhex_editors () {
      f_initvars_menu_app
      until [ $MBH -eq 0 ]
      do    # Start of Bin-Hex Editor Applications until loop.
            #MBH bbe     - sed-like editor for binary files.
            #MBH beav    - Binary file editor and viewer.
            #MBH bvi     - Binary file editor and viewer with vi-like key bindings.
            #MBH dhex    - Hexadecimal editor with diff mode, ncurses-based.
            #MBH hexedit - Hexadecimal editor.
            #MBH tweak   - Hex editor with emacs-like keybindings, ncurses-based.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-filedir.lib"
            MENU_TITLE="Binary-Hexadecimal File Editor Applications Menu"
            DELIMITER="#MBH" #MBH This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MBH
            #
            f_menu_item_process $MBH  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of Bin-Hex Editor Applications Applications case statement.
                 bbe' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Bb] | [Bb][Bb]*)
                 APP_NAME="bbe"
                 f_application_run
                 ;;
                 beav' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Bb] | [Bb][Ee]*)
                 APP_NAME="beav"
                 f_application_run
                 ;;
                 bvi' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Bb] | [Bb][Vv]*)
                 APP_NAME="bvi"
                 f_application_run
                 ;;
                 dhex' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Dd] | [Dd][Hh]*)
                 APP_NAME="dehex"
                 f_application_run
                 ;;
                 tweak' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Tt] | [Tt][Ww]*)
                 APP_NAME="tweak"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
            esac                # End of Bin-Hex Editor Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MBH=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of Bin-Hex Editor Applications until loop.
            #
      unset MBH MENU_ITEM  # Throw out this variable.
} # End of f_menu_app_binhex_editors
#
# +----------------------------------------+
# |      Function f_menu_app_file_burn     |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MFB, MAX, MENU_ITEM
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_file_burn () {
      f_initvars_menu_app
      until [ $MFB -eq 0 ]
      do    # Start of Backup Applications until loop.
            #MFB bashburn     - CD/DVD Write audio/data/iso image; features ASCII menus.
            #MFB burn         - Write audio/data/iso image or copy CDs.
            #MFB cdrecord     - CD burning. Obsoleted by wodim. May be hard-linked to wodim.
            #MFB mkcd         - CD burning.
            #MFB mybashburn   - CD burning.
            #MFB simpleburner - CD burning.
            #MFB wodim        - CD/DVD Write audio/data/iso image. Single line command.
            #MFB xorriso      - CD/DVD Write iso images to Rock Ridge ISO 9660 filesystems.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-filedir.lib"
            MENU_TITLE="CD/DVD File Burning Applications Menu"
            DELIMITER="#MFB" #MFB This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MFB
            #
            f_menu_item_process $MFB  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of CD/DVD File Burning Applications case statement.
                 bashburn' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Bb] | [Bb][Aa]*)
                 APP_NAME="bashburn"
                 f_application_run
                 ;;
                 burn' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Bb] | [Bb][Uu]*)
                 APP_NAME="burn"
                 f_application_run
                 ;;
                 cdrecord' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Cc] | [Cc][Dd]*)
                 APP_NAME="cdrecord --help"
                 clear # Blank the screen.
                 echo "cdrecord - Write files/iso image to CD-R."
                 echo "***OBSOLETED by wodim***"
                 echo
                 echo "Example: Find cdrom designation."
                 echo
                 echo "$ cdrecord --devices"
                 echo "wodim: Overview of accessible drives (2 found) :"
                 echo "-------------------------------------------------------------------------"
                 echo " 0  dev='/dev/sg0'	rwrw-- : 'SONY' 'DVD-ROM DDU1615'"
                 echo " 1  dev='/dev/sg1'	rwrw-- : 'HL-DT-ST' 'DVD+-RW GSA-H21N'"
                 echo "-------------------------------------------------------------------------"
                 echo
                 echo "Example: Burn an iso image file to a CD-R disk."
                 echo "In some modern linux distributions, cdrecord really runs wodim."
                 echo
                 echo "$ sudo cdrecord dev=/dev/sg1 -pad -v -eject /home/public/iso/<insert name of iso-file>.iso "
                 echo
                 echo "*** For more help type: 'man cdrecord'"
                 echo "                        'cdrecord --help'"
                 echo
                 echo "Now run cdrecord. Usage: cdrecord --help"
                 f_press_enter_key_to_continue
                 f_application_run
                 ;;
                 mkcd' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Mm] | [Mm][Kk]*)
                 APP_NAME="mkcd"
                 f_application_run
                 ;;
                 mybashburn' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Mm] | [Mm][Yy]*)
                 APP_NAME="mybashburn"
                 f_application_run
                 ;;
                 simpleburner' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ss] | [Ss][Ii]*)
                 APP_NAME="simpleburner"
                 f_application_run
                 ;;
                 wodim' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ww] | [Ww][Oo]*)
                 APP_NAME="wodim"
                 clear # Blank the screen.
                 echo "wodim - Write files/iso image to an optical disk."
                 echo
                 echo "Example: Find cdrom designation."
                 echo
                 echo "$ wodim --devices"
                 echo "wodim: Overview of accessible drives (2 found) :"
                 echo "-------------------------------------------------------------------------"
                 echo " 0  dev='/dev/sg0'	rwrw-- : 'SONY' 'DVD-ROM DDU1615'"
                 echo " 1  dev='/dev/sg1'	rwrw-- : 'HL-DT-ST' 'DVD+-RW GSA-H21N'"
                 echo "-------------------------------------------------------------------------"
                 echo
                 echo "Example: Burn an iso image file to a CD-R disk."
                 echo
                 echo "$ sudo wodim -v dev=/dev/sg1 -eject -data /home/public/iso/<iso-file>.iso"
                 echo "      -v     Verbose."
                 echo "      -eject Eject CD/DVD media after burning."
                 echo "      -speed Integer of speed factor x16 x32 x50, if none, then maximum."
                 echo
                 echo "*** For more help type: 'man wodim'"
                 echo "                        'wodim --help'"
                 echo
                 echo "Now run wodim. Usage: wodim --help"
                 f_press_enter_key_to_continue
                 f_application_run
                 ;;
                 xorriso' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Xx] | [Xx][Oo]*)
                 APP_NAME="xorriso"
                 f_application_run
                 ;;
            esac                # End of CD/DVD File Burning Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MFB=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of CD/DVD File Burning Applications until loop.
            #
      unset MFB MENU_ITEM  # Throw out this variable.
} # End of function f_menu_app_file_burn
#
# +----------------------------------------+
# |    Function f_menu_app_text_compare    |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MTC, MAX, MENU_ITEM.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_text_compare () {
      f_initvars_menu_app
      until [ $MTC -eq 0 ]
      do    # Start of Text Compare Applications until loop.
            #MTC cmp       - Compares 2 text files.
            #MTC colordiff - Differences between 2 text files shown in color.
            #MTC comm      - Compares 2 sorted files line by line.
            #MTC diff      - Differences between 2 text files shown using <> signs.
            #MTC diff3     - Differences between 3 text files
            #MTC imediff2  - Interactive 2-way file merge.
            #MTC vimdiff   - Differences between 2 text files shown in color highlights.
            #MTC wdiff     - Differences between 2 text files shown using +/- signs.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-filedir.lib"
            MENU_TITLE="Text Compare Applications Menu"
            DELIMITER="#MTC" #MTC This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MTC
            #
            f_menu_item_process $MTC  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of Text Compare Applications case statement.
                 cmp' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Cc] | [Cc][Mm] | [Cc][Mm][Pp])
                 APP_NAME="cmp"
                 f_application_run
                 ;;
                 colordiff' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Cc] | [Cc][Oo] | [Cc][Oo][Ll]*)
                 APP_NAME="colordiff"
                 f_application_run
                 ;;
                 comm' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Cc] | [Cc][Oo] | [Cc][Oo][Mm]*)
                 APP_NAME="comm"
                 clear # Blank the screen.
                 echo "comm - compare two sorted files line by line." 
                 echo
                 echo "Usage:"
                 echo "comm [OPTION]... FILE1 FILE2"
                 echo
                 echo "Output is in three columns of quoted lines."
                 echo
                 echo "  Column 1      Column 2          Column 3"
                 echo "Lines unique  Lines unique      Lines common"
                 echo "  to FILE1      to FILE2     to FILE1 and FILE2"
                 echo
                 echo "OPTIONS:"
                 echo "         -1                 Suppress column 1."
                 echo "         -2                 Suppress column 2."
                 echo "         -3                 Suppress column 3."
                 echo "         --no-check order   Do not check files for sort order."
                 echo 
                 echo "*** For more help type: 'man comm'"
                 echo "                        'comm --help'"
                 echo
                 f_press_enter_key_to_continue
                 f_application_run
                 ;;
                 diff' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Dd] | [[Dd][Ii] | [[Dd][Ii][Ff] | [[Dd][Ii][Ff][Ff])
                 APP_NAME="diff"
                 f_application_run
                 ;;
                 diff3' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Dd] | [[Dd][Ii] | [[Dd][Ii][Ff] | [[Dd][Ii][Ff][Ff] | [[Dd][Ii][Ff][Ff]3)
                 APP_NAME="diff3"
                 f_application_run
                 ;;
                 imediff2' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ii] | [Ii][Mm]*)
                 APP_NAME="imediff2"
                 f_application_run
                 ;;
                 vimdiff' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Vv] | [Vv][Ii]*)
                 APP_NAME="vimdiff"
                 f_application_run
                 ;;
                 wdiff' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ww] | [Ww][Dd]*)
                 APP_NAME="wdiff"
                 f_application_run
                 ;;
            esac                # End of Text Compare Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MTC=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of Text Compare Applications until loop.
            #
      unset MTC MENU_ITEM  # Throw out this variable.
} # End of f_menu_app_text_compare
#
# +----------------------------------------+
# |  Function f_menu_app_file_compression  |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MFC, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_file_compression () {
      f_initvars_menu_app
      until [ $MFC -eq 0 ]
      do    # Start of Backup Applications until loop.
            #MFC acat    - Exract files in archives to standard output (tar, gzip, zip etc.).
            #MFC als     - List files in archives (tar, gzip, zip etc.).
            #MFC apack   - File compress create archives (tar, gzip, zip etc.).
            #MFC atool   - Manages file archives (tar, gzip, zip etc.).
            #MFC aunpack - File decompress extract from archives (tar, gzip, zip etc.).
            #MFC dtrx    - Smart extract tar, zip, deb, rpm, gz, bz2, cab, 7z, lzh, rar, etc.
            #MFC gunzip  - File decompress gzip files.
            #MFC gzip    - File compress, to gzip files.
            #MFC p7zip   - File compress, to 7z files, 7z better than zip compression.
            #MFC unace   - File decompress ACE 1.x archives. (ACE is a proprietary format).
            #MFC unxc    - File decompress xz files.
            #MFC unzip   - File decompress zip files.
            #MFC xz      - File compress xz files.
            #MFC xzcat   - File cat xz files.
            #MFC xzgrep  - File grep xz files.
            #MFC zip     - File compress files to zip files. 
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-filedir.lib"
            MENU_TITLE="File Compression Applications Menu"
            DELIMITER="#MFC" #MFC This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MFC
            #
            f_menu_item_process $MFC  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of File Compression Applications case statement.

                 acat' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Aa] | [Aa][Cc]*)
                 APP_NAME="acat"
                 f_application_run
                 ;;
                 als' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Aa] | [Aa][Ll]*)
                 APP_NAME="als"
                 f_application_run
                 ;;
                 apack' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Aa] | [Aa][Pp]*)
                 APP_NAME="apack"
                 f_application_run
                 ;;
                 atool' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Aa] | [Aa][Tt]*)
                 APP_NAME="atool"
                 f_application_run
                 ;;
                 aunpack' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Aa] | [Aa][Uu]*)
                 APP_NAME="aunpack"
                 f_application_run
                 ;;
                 dtrx' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Dd] | [Dd][Tt]*)
                 APP_NAME="dtrx"
                 f_application_run
                 ;;
                 gunzip' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Gg] | [Gg][Uu]*)
                 APP_NAME="gunzip"
                 f_application_run
                 ;;
                 gzip' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Gg] | [Gg][Zz]*)
                 APP_NAME="gzip"
                 f_application_run
                 ;;
                 p7zip' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Pp] | [Pp][7]*)
                 APP_NAME="p7zip"
                 f_application_run
                 ;;
                 unace' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Uu]| [Uu][Nn] | [Uu][Nn][Aa]*)
                 APP_NAME="unace"
                 f_application_run
                 ;;
                 unxz' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Uu]| [Uu][Nn] | [Uu][Nn][Xx]*)
                 APP_NAME="unxz"
                 f_application_run
                 ;;
                 unzip' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Uu] | [Uu][Nn] | [Uu][Nn][Zz]*)
                 APP_NAME="unzip"
                 f_application_run
                 ;;
                 xz' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Xx] | [Xx][Zz])
                 APP_NAME="xz"
                 f_application_run
                 ;;
                 xzcat' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Xx] | [Xx][Zz] | [Xx][Zz][Cc]*)
                 APP_NAME="xzcat"
                 f_application_run
                 ;;
                 xzgrep' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Xx] | [Xx][Zz] | [Xx][Zz][Gg]*)
                 APP_NAME="xzgrep"
                 f_application_run
                 ;;
                 zip' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Zz] | [Zz][Ii]*)
                 APP_NAME="zip"
                 f_application_run
                 ;;
            esac                # End of File Compression Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MFC=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of File Compression Applications until loop.
            #
      unset MFC MENU_ITEM  # Throw out this variable.
} # End of function f_menu_app_file_compression
#
# +----------------------------------------+
# |   Function f_menu_app_file_conversion  |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MTW, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_file_conversion () {
      f_initvars_menu_app
      until [ $MTW -eq 0 ]
      do    # Start of File Format Conversion Applications until loop.
            #MTW ebook2cw   - Converts plain text ebooks to  morse code mp3/ogg audio files.
            #MTW txt2html   - Converts plain ASCII text to HTML format.
            #MTW txt2man    - Converts plain ASCII text to man format.
            #MTW txt2pdbdoc - Converts plain ASCII text to PDB doc format for Palm Pilots.
            #MTW txt2regex  - Converts human sentences to regex. Regular Expression Wizard.
            #MTW txt2tags   - Converts plain ASCII text to a variety of formats.
            #MTW unoconv    - Converts any document format that LibreOffice imports/exports.
            #MTW unrtf      - Converts RTF to HTML, LaTeX, txt, PS.
            #MTW wp2x       - Converts WordPerfect 5.x documents to HTML, LaTeX, txt, troff.
            #MTW xmlto      - Converts XML to DVI XSL-FO, HTML, XHTML, epub, man, PDF, PS.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-filedir.lib"
            MENU_TITLE="File Format Conversion Applications Menu"
            DELIMITER="#MTW" #MTW This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MTW
            #
            f_menu_item_process $MTW  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of File Format Conversion Applications case statement.
                 ebook2cw' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ee] | [Ee][Bb]*)
                 APP_NAME="ebook2cw"
                 f_application_run
                 ;;
                 txt2html' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Tt] | [Tt][Xx] | [Tt][Xx][Tt] | [Tt][Xx][Tt][2] | [Tt][Xx][Tt][2][Hh]*)
                 APP_NAME="man txt2html"
                 clear # Blank the screen.
                 echo "txt2html - Convert plain text files to html." 
                 echo
                 echo "Usage:"
                 echo "txt2html [ --append_file filename ] [ --append_head filename ]"
                 echo "         [ --body_deco string ] [ --bold_delimiter string ]"
                 echo "         [ --bullets string ] [ --bullets_ordered string ]"
                 echo "         [ --caps_tag tag ]"
                 echo
                 echo "*** For more help type: 'man txt2html'"
                 echo "                        'txt2html --help'"
                 echo
                 echo "Now show help. Usage: man txt2html"
                 f_press_enter_key_to_continue
                 f_application_run
                 ;;
                 txt2man' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Tt] | [Tt][Xx] | [Tt][Xx][Tt] | [Tt][Xx][Tt][2] | [Tt][Xx][Tt][2][Mm]*)
                 APP_NAME="man txt2man"
                 clear # Blank the screen.
                 echo "txt2man - Convert plain text files to man pages." 
                 echo
                 echo "Usage:"
                 echo "txt2man [-hpTX] [-t mytitle] [-P pname] [-r rel] [-s sect] [-v vol]"
                 echo "        [-I txt] [-B txt] [-d date] [ifile]"
                 echo
                 echo "*** For more help type: 'man txt2man'"
                 echo "                        'txt2man --help'"
                 echo
                 echo "Now show help. Usage: man txt2man"
                 f_press_enter_key_to_continue
                 f_application_run
                 ;;
                 txt2pdbdoc' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Tt] | [Tt][Xx] | [Tt][Xx][Tt] | [Tt][Xx][Tt][2] | [Tt][Xx][Tt][2][Pp]*)
                 APP_NAME="man txt2pdbdoc"
                 clear # Blank the screen.
                 echo "txt2pdbdoc - Convert plain text files to (Palm Pilot Database) Doc file *.pdb."
                 echo "             for PalmPilots & DocReaders. (Does anyone still have a PalmPilot?)"
                 echo
                 echo "Usage: txt2pdbdoc [-b] [-c] [-v] document-name file.txt file.pdb"
                 echo "       txt2pdbdoc -d [-D] [-v] file.pdb [ file.txt ]"
                 echo "       txt2pdbdoc -V"
                 echo
                 echo "*** For more help type: 'man txt2pdbdoc'"
                 echo "                        'txt2pdbdoc --help'"
                 echo
                 echo "Now show help. Usage: man txt2pdbdoc"
                 f_press_enter_key_to_continue
                 f_application_run
                 ;;
                 txt2regex' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Tt] | [Tt][Xx] | [Tt][Xx][Tt] | [Tt][Xx][Tt][2] | [Tt][Xx][Tt][2][Rr]*)
                 APP_NAME="man txt2regex"
                 clear # Blank the screen.
                 echo "txt2regex - Convert human sentences to regex." 
                 echo
                 echo "Usage:"
                 echo "txt2regex --all|--prog <p1,p2,...,pN>"
                 echo
                 echo "*** For more help type: 'man txt2regex'"
                 echo "                        'txt2regex --help'"
                 echo
                 echo "Now show help. Usage: man txt2regex"
                 f_press_enter_key_to_continue
                 f_application_run
                 ;;
                 txt2tags' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Tt] | [Tt][Xx] | [Tt][Xx][Tt] | [Tt][Xx][Tt][2] | [Tt][Xx][Tt][2][Tt]*)
                 APP_NAME="man txt2tags"
                 clear # Blank the screen.
                 echo "txt2tags - Convert plain text files to ASCII Art, AsciiDoc, Creole, DocBook,"
                 echo "           DokuWiki, Google Code Wiki, HTML, LaTeX, Lout, MagicPoint, Man page,"
                 echo "           MoinMoin, PageMaker, Plain Text, PmWiki, SGML, Wikipedia and XHTML."
                 echo 
                 echo "Usage:"
                 echo "txt2tags [OPTIONS] [FILE]... "
                 echo
                 echo "*** For more help type: 'man txt2tags'"
                 echo "                        'txt2tags --help'"
                 echo
                 echo "Now show help. Usage: man txt2tags"
                 f_press_enter_key_to_continue
                 f_application_run
                 ;;
                 unoconv' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Uu] | [Uu][Nn] | [Uu][Nn][Oo]*)
                 APP_NAME="unoconv"
                 f_application_run
                 ;;
                 unrtf' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Uu] | [Uu][Nn] | [Uu][Nn][Rr]*)
                 APP_NAME="unrtf"
                 f_application_run
                 ;;
                 wp2x' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ww] | Ww][Pp]*)
                 APP_NAME="wp2x"
                 f_application_run
                 ;;
                 xmlto' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Xx] | Xx][Mm]*)
                 APP_NAME="xmlto"
                 f_application_run
                 ;;
            esac                # End of File Format Conversion Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MTW=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of File Format Conversion Applications until loop.
            #
      unset MTW MENU_ITEM  # Throw out this variable.
} # End of f_menu_app_file_conversion
#
# +----------------------------------------+
# |  Function f_menu_app_text_file_editors |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MTH, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_text_file_editors () {
      f_initvars_menu_app
      until [ $MTH -eq 0 ]
      do    # Start of Text Editor Applications until loop.
            #MTH dav   - Text editor.
            #MTH ed    - Classic CLI text editor.
            #MTH emacs - Full screen text editor with plugins.
            #MTH jed   - JED text editor.
            #MTH joe   - Text editor. Ctrl-K H for help.
            #MTH nano  - Simple full-screen text editor.
            #MTH pico  - Simple full-screen text editor.
            #MTH vi    - Classic full-screen text editor.
            #MTH vim   - vi "Improved" text editor.
            #MTH zile  - Very small Emacs-subset editor.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-filedir.lib"
            MENU_TITLE="Text File Editor Applications Menu"
            DELIMITER="#MTH" #MTH This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MTH
            #
            f_menu_item_process $MTH  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of Text Editor Applications case statement.
                 dav' '*)
                 APP_NAME=$MENU_ITEM
                 f_how_to_quit_application "<F5>"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Dd] | [Dd][Aa]*)
                 APP_NAME="dav"
                 f_how_to_quit_application "<F5>"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 ed' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ee] | [Ee][Dd])
                 APP_NAME="ed"
                 f_application_run
                 ;;
                 emacs' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Ee] | [Ee][Mm]*)
                 APP_NAME="emacs"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 jed' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Jj] | [Jj][Ee]*)
                 APP_NAME="jed"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 joe' '*)
                 APP_NAME=$MENU_ITEM
                 f_how_to_quit_application "Ctrl-k x"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Jj] | [Jj][Oo]*)
                 APP_NAME="joe"
                 f_how_to_quit_application "Ctrl-k x"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 nano' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Nn] | [Nn][Aa]*)
                 APP_NAME="nano"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 pico' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Pp] | [Pp][Ii]*)
                 APP_NAME="pico"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 vi' '*)
                 APP_NAME=$MENU_ITEM
                 f_how_to_quit_application "<esc> + :q!"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Vv] | [Vv][Ii])
                 APP_NAME="vi"
                 f_how_to_quit_application "<esc> + :q!"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 vim' '*)
                 APP_NAME=$MENU_ITEM
                 f_how_to_quit_application "<esc> + :q!"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Vv] | [Vv][Ii] | [Vv][Ii][Mm])
                 APP_NAME="vim"
                 f_how_to_quit_application "<esc> + :q!"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 zile' '*)
                 APP_NAME=$MENU_ITEM
                 clear # Blank the screen.
                 echo zile - Small Emacs editor.
                 echo
                 echo "To quit $APP_NAME, type Ctrl-x followed by Ctrl-z and Ctrl-z again."
                 echo "(There is no way to cleanly return to the menu)."
                 echo "Running $APP_NAME will exit this menu script."
                 echo
                 echo -n "Run $APP_NAME and exit script? (y/N)? "
                 read ANS
                 case $ANS in
                      [Yy] | [Yy][Ee] | [Yy][Ee][Ss])
                      f_application_run
                      ;;
                      [Nn] | [Nn][Oo] | *)
                      PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                      ;;
                 esac
                 ;;
                 [Zz] | [Zz][Ii]*)
                 APP_NAME="zile"
                 clear # Blank the screen.
                 echo zile - Small Emacs editor.
                 echo
                 echo "To quit $APP_NAME, type Ctrl-x followed by Ctrl-z and Ctrl-z again."
                 echo "(There is no way to cleanly return to the menu)."
                 echo "Running $APP_NAME will exit this menu script."
                 echo
                 echo -n "Run $APP_NAME and exit script? (y/N)? "
                 read ANS
                 case $ANS in
                      [Yy] | [Yy][Ee] | [Yy][Ee][Ss])
                      f_application_run
                      ;;
                      [Nn] | [Nn][Oo] | *)
                      PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                      ;;
                 esac
                 ;;
            esac                # End of Text Editor Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MTH=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of Text Editor Applications until loop.
            #
      unset MTH MENU_ITEM  # Throw out this variable.
} # End of f_menu_app_text_editors
#
# +----------------------------------------+
# |   Function f_menu_app_file_encryption  |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MFE, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_file_encryption () {
      f_initvars_menu_app
      until [ $MFE -eq 0 ]
      do    # Start of File Encryption Applications until loop.
            #MFE bcrypt    - Uses the blowfish encryption algorithm.
            #MFE ccrypt    - Uses the Rijndael cipher algorithm.
            #MFE crypt     - Wrapper for mcrypt, backward compatible to old Unix crypt.
            #MFE gnupg     - Gnu Privacy Guard symmetetric encryption/decryption.
            #MFE lspgpot   - Extracts ownertrust values from PGP keyrings.
            #MFE mcrypt    - A simple crypting program, a replacement for the old Unix crypt.
            #MFE pgp       - Pretty Good Privacy (pgp).
            #MFE scrypt    - Uses the scrypt key derivation function. Better than bcrypt.
            #MFE truecrypt - Program released under TrueCrypt License (not Open-source).
            #MFE zcrypt    - Another crypt program.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-filedir.lib"
            MENU_TITLE="File Encryption Applications Menu"
            DELIMITER="#MFE" #MFE This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MFE
            #
            f_menu_item_process $MFE  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of File Encryption Applications case statement.
                 bcrypt' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Bb] | [Bb][Cc]*)
                 APP_NAME="bcrypt"
                 f_application_run
                 ;;
                 ccrypt' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Cc] | [Cc][Cc]*)
                 APP_NAME="ccrypt"
                 f_application_run
                 ;;
                 crypt' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Cc] | [Cc][Rr]*)
                 APP_NAME="crypt"
                 f_application_run
                 ;;
                 gnupgp' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Gg] | [Gg][Nn]*)
                 APP_NAME="gnupgp"
                 f_application_run
                 ;;
                 lspgpot' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ll] | [Ll][Ss]*)
                 APP_NAME="lspgpot"
                 f_application_run
                 ;;
                 mcrypt' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Mm] | [Mm][Cc]*)
                 APP_NAME="mcrypt"
                 f_application_run
                 ;;
                 pgp' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Pp] | [Pp][Gg]*)
                 APP_NAME="pgp"
                 f_application_run
                 ;;
                 scrypt' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ss] | [Ss][Cc]*)
                 APP_NAME="scrypt"
                 f_application_run
                 ;;
                 truecrypt' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Tt] | [Tt][Rr]*)
                 APP_NAME="truecrypt"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 zcrypt' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Zz] | [Zz][Cc]*)
                 APP_NAME="zcrypt"
                 f_application_run
                 ;;
            esac                # End of File Encryption Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MFE=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of <Sample Template> Applications until loop.
            #
      unset MFE MENU_ITEM  # Throw out this variable.
} # End of function f_menu_app_file_encryption
#
# +----------------------------------------+
# |      Function f_menu_app_file_find     |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MFF, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_file_find () {
      f_initvars_menu_app
      until [ $MENU_ITEM -eq 0 ]
      do    # Start of Find File Applications until loop.
            #MFF find     - Find files using pattern matching.
            #MFF locate   - Find files using an internal database, mlocate.
            #MFF updatedb - Update the internal database, mlocate, used by locate.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-filedir.lib"
            MENU_TITLE="Find File Applications Menu"
            DELIMITER="#MFF" #MFF This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MFF
            #
            f_menu_item_process $MFF  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of Find File Applications case statement.
                 find' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ff] | [Ff][Ii]*)
                 APP_NAME="find --help"
                 clear # Blank the screen.
                 echo "find - Find and search for files."
                 echo
                 echo "Usage:"
                 echo "find [-H] [-L] [-P] [-D debugopts] [-Olevel] [path...] [expression]"
                 echo
                 echo "Example: find file with name *test-file* in directory /home/user/."
                 echo "find -iname /home/user/ *\"test-file1\"*"
                 echo
                 echo "Example: find file and then delete it."
                 echo "find  -iname /home/user/ *\"test-file\"* -exec rm '{}' +"
                 echo
                 echo "*** For more help type: 'man find'"
                 echo "                        'find --help'"
                 echo
                 echo "Now run find. Usage: find --help"
                 f_press_enter_key_to_continue
                 f_application_run
                 ;;
                 locate' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ll] | [Ll][Oo]*)
                 APP_NAME="locate --help"
                 clear # Blank the screen.
                 echo "locate - Find and search for files."
                 echo
                 echo "The locate command is dependent on an up-to-date database, mlocate."
                 echo "To update the mlocate database, run the command, 'updatedb'."
                 echo
                 echo "Usage: locate [OPTION]... [PATTERN]..."
                 echo "Search for entries in a mlocate database (/var/lib/mlocate/mlocate.db)"
                 echo
                 echo "Example: find all text files in the /usr directory."
                 echo "locate /usr/*.txt"
                 echo
                 echo "Example: find file with name *test-file* in directory /home/user/."
                 echo "locate /home/user/*test-file*"
                 echo
                 echo "*** For more help type: 'man locate'" 
                 echo "                        'locate --help'"
                 echo
                 echo "Now run find. Usage: locate --help"
                 f_press_enter_key_to_continue
                 f_application_run
                 ;;
                 updatedb' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Uu] | [Uu][Pp]*)
                 APP_NAME="updatedb"
                 f_application_run
                 ;;
            esac                # End of Find File Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MFF=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of Find File Applications until loop.
            #
      unset MFF MENU_ITEM  # Throw out this variable.
} # End of function f_menu_app_file_find
#
# +----------------------------------------+
# |   Function f_menu_app_file_tranfer     |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MFT, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_file_transfer () {
      f_initvars_menu_app
      until [ $MFT -eq 0 ]
      do    # Start of File Transfer Applications until loop.
            #MFT cmdftp - File transfer client.
            #MFT curl   - File transfer.
            #MFT ftp    - File transfer.
            #MFT ftpfs  - File transfer client.
            #MFT lftp   - Sophisticated sftp/ftp/http download/upload client program.
            #MFT ncftp  - File transfer client.
            #MFT scp    - File transfer.
            #MFT woof   - Woof (Web Offer One File) copies files via the HTTP protocol.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-filedir.lib"
            MENU_TITLE="File Transfer Applications Menu"
            DELIMITER="#MFT" #MFT This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MFT
            #
            f_menu_item_process $MFT  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of File Transfer Applications case statement.
                 cmdftp' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Cc] | [Cc][Mm]*)
                 APP_NAME="cmdftp"
                 f_application_run
                 ;;
                 curl' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Cc] | [Cc][Uu]*)
                 APP_NAME="curl"
                 f_application_run
                 ;;
                 ftp' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ff] | [Ff][Tt] | [Ff][Tt][Pp])
                 APP_NAME="ftp"
                 f_application_run
                 ;;
                 ftpfs' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ff] | [Ff][Tt] | [Ff][Tt][Pp] | [Ff][Tt][Pp][Ff]*)
                 APP_NAME="ftpfs"
                 f_application_run
                 ;;
                 lftp' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ll] | [Ll][Ff]*)
                 APP_NAME="lftp"
                 f_application_run
                 ;;
                 ncftp' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Nn] | [Nn][Cc]*)
                 APP_NAME="ncftp"
                 f_application_run
                 ;;
                 scp' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ss] | [Ss][Cc]*)
                 APP_NAME="scp"
                 f_application_run
                 ;;
                 woof' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ww] | [WW][Oo]*)
                 APP_NAME="woof"
                 f_application_run
                 ;;
            esac                # End of File Transfer Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MFT=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of File Transfer Applications until loop.
            #
      unset MFT MENU_ITEM  # Throw out this variable.
} # End of function f_menu_app_file_transfer
#
# +----------------------------------------+
# |    Function f_menu_app_file_managers   |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MFM, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_file_managers () {
      f_initvars_menu_app
      until [ $MFM -eq 0 ]
      do    # Start of File Manager Applications until loop.
            #MFM clex     - File manager.
            #MFM detox    - File name clean up.
            #MFM dired    - File manager for Emacs.
            #MFM exiftool - Display jpeg file properties in ls-like format.
            #MFM findmnt  - Find a filesystem.
            #MFM jhead    - Display jpeg file properties.
            #MFM mc       - File Manager, Midnight Commander.
            #MFM pilot    - Simple file browser from Aline.
            #MFM ranger   - File manager.
            #MFM smbc     - Samba file manager for folder shares with Microsoft Windows.
            #MFM vfu      - File manager, ncurses-based.
            #MFM vifm     - File manager with vi-like commands.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-filedir.lib"
            MENU_TITLE="File Manager Applications Menu"
            DELIMITER="#MFM" #MFM This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MFM
            #
            f_menu_item_process $MFM  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of File Manager Applications case statement.
                 clex' '*)
                 APP_NAME=$MENU_ITEM
                 f_how_to_quit_application "Alt-q" 
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Cc] | [Cc][Ll]*)
                 APP_NAME="clex"
                 f_how_to_quit_application "Alt-q" 
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 detox' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Dd] | [Dd][Ee]*)
                 APP_NAME="detox"
                 f_application_run
                 ;;
                 dired' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Dd] | [Dd][Ii]*)
                 APP_NAME="dired"
                 f_application_run
                 ;;
                 exiftool' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ee] | [Ee][Xx]*)
                 APP_NAME="exiftool"
                 f_application_run
                 ;;
                 findmnt' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ff] | [Ff][Ii]*)
                 APP_NAME="findmnt"
                 f_application_run
                 ;;
                 jhead' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Jj] | [Jj][Hh]*)
                 APP_NAME="jhead"
                 f_application_run
                 ;;
                 mc' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Mm] | [Mm][Cc])
                 APP_NAME="mc"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 pilot' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Pp] | [Pp][Ii]*)
                 APP_NAME="pilot"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 ranger' '*)
                 APP_NAME=$MENU_ITEM
                 f_how_to_quit_application "q"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Rr] | [Rr][Aa]*)
                 APP_NAME="ranger"
                 f_how_to_quit_application "q"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 smbc' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ss] | [Ss][Mm]*)
                 APP_NAME="smbc"
                 f_application_run
                 ;;
                 vfu' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Vv] | [Vv][Ff]*)
                 APP_NAME="vfu"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 vifm' '*)
                 f_how_to_quit_application "the vi command for 'quit' which is ':q' or <colon>+q"
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Vv] | [Vv][Ii]*)
                 APP_NAME="vifm"
                 f_how_to_quit_application "the vi command for 'quit' which is ':q' or <colon>+q"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
            esac               # End of File Manager Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MFM=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of File Manager Applications until loop.
            #
      unset MFM MENU_ITEM  # Throw out this variable.
} # End of f_menu_app_file_managers
#
# +----------------------------------------+
# |   Function f_menu_app_file_operations  |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MFO, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_file_operations () {
      f_initvars_menu_app
      until [ $MFO -eq 0 ]
      do    # Start of File Operations Applications until loop.
            #MFO dtrx      - Use tar without remembering which flags for each file to use.
            #MFO rsync     - File backup, mirror, directories and files.
            #MFO tar       - File backup, compress files.
            #MFO --------- - ---------------------------------------------------------------
            #MFO advcpmv   - Replaces cp, mv, features progress bar, MiB/s, time remaining.
            #MFO xd        - Smart 'cd' change directory; uses abbreviated directory names.
            #MFO --------- - ---------------------------------------------------------------
            #MFO shred     - Delete files securely without recovery.
            #MFO --------- - ---------------------------------------------------------------
            #MFO foremost  - File recovery from within a *.img disk image file.
            #MFO photorec  - File recovery.
            #MFO safecopy  - File recovery.
            #MFO trash-cli - Remembers name, path, date, permissions of each trashed file.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-filedir.lib"
            MENU_TITLE="File Operations Applications Menu"
            DELIMITER="#MFO" #MFO This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MFO
            #
            f_menu_item_process $MFO  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of File Operations Applications case statement.
                 dtrx' '* | 'sudo dtrx' | 'sudo dtrx '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Dd] | [Dd][Tt]*)
                 APP_NAME="dtrx"
                 f_application_run
                 ;;
                 rsync' '* | 'sudo rsync' | 'sudo rsync '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Rr] | [Rr][Ss]*)
                 APP_NAME="rsync"
                 f_application_run
                 ;;
                 tar' '* | 'sudo tar' | 'sudo tar '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Tt] | [Tt][Aa]*)
                 APP_NAME="tar"
                 f_application_run
                 ;;
                 advcpmv' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Aa] | [Aa][Dd]*)
                 APP_NAME="advcpmv"
                 f_application_run
                 ;;
                 shred' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ss] | [Ss][Hh]*)
                 APP_NAME="shred"
                 f_application_run
                 ;;
                 foremost' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ff] | [Ff][Oo]*)
                 APP_NAME="foremost --help"
                 clear # Blank the screen.
                 echo "foremost - Recover deleted files."
                 echo
                 echo "Usage:"
                 echo "foremost [-h] [-V] [-d] [-vqwQT] [-b <blocksize>] [-o <dir>] [-t <type>]"
                 echo "         [-s <num>] [-i <file>]"
                 echo
                 echo "Recovers these file-types: jpg, gif, png, bmp, avi, exe, mpg, wav, riff," 
                 echo "wmv, mov, pdf, ole, doc, zip, rar, htm, cpp."
                 echo
                 echo "Run the default case"
                 echo "foremost image.dd"
                 echo
                 echo "Search all defined types"
                 echo "foremost -t all -i image.dd"
                 echo
                 echo "Search for gif and pdf's"
                 echo "foremost -t gif,pdf -i image.dd"
                 echo
                 echo "*** For more help type: 'man foremost'"
                 echo "                        'foremost --help'"
                 echo
                 echo "Now run find. Usage: foremost --help"
                 f_press_enter_key_to_continue
                 f_application_run
                 ;;
                 photorec' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Pp] | [Pp][Hh]*)
                 APP_NAME="photorec --help"
                 clear # Blank the screen.
                 echo "photorec - Recover lost files from harddisk, digital camera and cdrom."
                 echo
                 echo "Usage:"
                 echo "photorec [/log] [/debug] [/d recup_dir] [device|image.dd|image.e01]"
                 echo
                 echo           "OPTIONS"
                 echo "         /log   create a photorec.log file"
                 echo "         /debug add debug information"
                 echo
                 echo "*** For more help type: 'man photorec'"
                 echo "                        'photorec --help'"
                 echo
                 echo "Now run photorec. Usage: photorec --help"
                 f_press_enter_key_to_continue
                 f_application_run
                 ;;
                 safecopy' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ss] | [Ss][Aa]*)
                 APP_NAME="safecopy --help"
                 clear # Blank the screen.
                 echo "safecopy - Recover lost data."
                 echo
                 echo "Usage:"
                 echo "safecopy [OPTIONS] <SOURCE> <TARGET>"
                 echo
                 echo "*** For more help type: 'man safecopy'" 
                 echo "                        'safecopy --help'"
                 echo
                 echo "Now run safecopy. Usage: safecopy --help"
                 f_press_enter_key_to_continue
                 f_application_run
                 ;;
                 trash-cli' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Tt] | [Tt][Rr]*)
                 APP_NAME="trash-cli"
                 f_application_run
                 ;;
                 xd' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Xx] | [Xx][Dd])
                 APP_NAME="xd"
                 f_application_run
                 ;;
            esac                # End of File Operations Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MFO=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of File Operations Applications until loop.
            #
      unset MFO MENU_ITEM  # Throw out this variable.
} # End of function f_menu_app_file_operations
#
# +----------------------------------------+
# |   Function f_menu_app_file_splitters   |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MFS, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_file_splitters () {
      f_initvars_menu_app
      until [ $MFS -eq 0 ]
      do    # Start of File Splitter Applications until loop.
            #MFS lxsplit - Splits/Joins files even greater than 2GB.
            #MFS slice   - Divides ASCII file w/delimiters into possibly overlapping slices.
            #MFS split   - Splits/Joins files.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-filedir.lib"
            MENU_TITLE="File Splitter Applications Menu"
            DELIMITER="#MFS" #MFS This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MFS
            #
            f_menu_item_process $MFS  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of File Splitter Applications case statement.
                 lxsplit' '* | 'sudo lxsplit '* | 'sudo lxsplit')
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ll] | [Ll][Xx]*)
                 APP_NAME="lxsplit"
                 f_application_run
                 ;;
                 slice' '* | 'sudo slice '* | 'sudo slice')
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ss] | [Ss][Ll]*)
                 APP_NAME="slice"
                 f_application_run
                 ;;
                 split' '* | 'sudo split '* | 'sudo split')
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Ss] | [Ss][Pp]*)
                 APP_NAME="split --help"
                 clear # Blank the screen.
                 echo "split - Split files into smaller pieces."
                 echo
                 echo "Usage:"
                 echo "split [OPTION]... [INPUT [PREFIX]]"
                 echo
                 echo "Output  fixed-size  pieces of INPUT to PREFIXaa, PREFIXab, ...; default"
                 echo "size is 1000 lines, and default PREFIX is 'x'.  With no INPUT, or  when"
                 echo "INPUT is -, read standard input."
                 echo
                 echo "*** For more help type: 'man split'" 
                 echo "                        'split --help'"
                 echo
                 echo "Now run find. Usage: split --help"
                 echo
                 f_press_enter_key_to_continue
                 f_application_run
                 ;;
            esac                # End of File Splitter Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MFS=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of File Splitter Applications until loop.
            #
      unset MFS MENU_ITEM  # Throw out this variable.
} # End of function f_menu_app_file_splitters
#
# +----------------------------------------+
# |    Function f_menu_app_file_viewers    |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MFV, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_file_viewers () {
      f_initvars_menu_app
      until [ $MFV -eq 0 ]
      do    # Start of File Viewer Applications until loop.
            #MFV less - File viewer and bi-directional pager.
            #MFV more - File viewer pager.
            #MFV most - File viewer and bi-directional pager.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-filedir.lib"
            MENU_TITLE="File Viewer Applications Menu"
            DELIMITER="#MFV" #MFV This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MFV
            #
            f_menu_item_process $MFV  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of File Viewer Applications case statement.
                 less' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=1 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Ll] | [Ll][Ee]*)
                 APP_NAME="less"
                 f_application_run
                 PRESS_KEY=1 # Do not display "Press 'Enter' key to continue."
                 ;;
                 more' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Mm] | [Mm][Oo] | [Mm][Oo][Rr]*)
                 APP_NAME="more"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 most' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=1 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Mm] | [Mm][Oo] | [Mm][Oo][Ss]*)
                 APP_NAME="most"
                 f_application_run
                 PRESS_KEY=1 # Do not display "Press 'Enter' key to continue."
                 ;;
            esac                # End of File Viewer Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MFV=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of File Viewer Applications until loop.
            #
      unset MFV MENU_ITEM  # Throw out this variable.
} # End of function f_menu_app_file_viewers
