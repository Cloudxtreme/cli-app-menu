# Â©2013 Copyright 2013 Robert D. Chin
#
# +----------------------------------------+
# |             Revision Date              |
# +----------------------------------------+
# REVDATE="September-06-2013 14:21"
#
# +----------------------------------------+
# |       Function f_menu_cat_office       |
# +----------------------------------------+
#
#  Inputs: None.
#    Uses: BOF, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_cat_office () {
      f_initvars_menu_app
      BOF="" # Initialize variable.
      until [ $BOF -eq 0 ]
      do    # Start of Office Application Category until loop.
            #BOF Accounting   - Accounting (with with double-entry).
            #BOF Calculators  - Simple "pocket" calculators.
            #BOF Calendar     - Calendars.
            #BOF Clocks       - Alarm clocks, specialized clocks.
            #BOF Contacts     - Contact/Address book lists.
            #BOF Notebooks    - Write notes in a "notebook" or "diary".
            #BOF PDF-PS docs  - view, edit, compare, merge pdf and ps documents.
            #BOF Presenters   - Text slideshow presentation.
            #BOF Spreadsheets - Basic spreadsheet.
            #BOF Text         - Create/Edit text files, text format converters, etc.        
            #BOF ToDo         - To-Do lists.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-office.lib"
            MENU_TITLE="Office Application Category Menu"
            DELIMITER="#BOF" #BOF This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read BOF
            #
            f_menu_item_process $BOF  # Outputs $MENU_ITEM. $BOF
            ERROR=0 # Reset error flag.
            #
            case $MENU_ITEM in # Start of Office Application Category case statement.
                 [Aa] | [Aa][Cc]*)
                 f_menu_app_accounting        # Accounting Applications Menu.
                 ;;
                 [Cc] | [Cc][Aa] | [Cc][Aa][Ll] | [Cc][Aa][Ll][Cc]*)
                 f_menu_app_calculators       # Calculator Applications Menu.
                 ;;
                 [Cc] | [Cc][Aa] | [Cc][Aa][Ll] | [Cc][Aa][Ll][Ee]*)
                 f_menu_app_calendar          # Calendar Applications Menu.
                 ;;
                 [Cc] | [Cc][Ll]*)
                 f_menu_app_clocks            # Clock Applications Menu.
                 ;;
                 [Cc] | [Cc][Oo]*)
                 f_menu_app_contacts          # Contact Applications Menu.
                 ;;
                 [Nn] | [Nn][Oo]*)
                 f_menu_app_note              # Note Applications Menu.
                 ;;
                 [Pp] | [Pp][Dd]*)
                 f_menu_app_pdfps             # PDF-PS Applications Menu.
                 ;;
                 [Pp] | [Pp][Rr]*)
                 f_menu_app_presentation      # Presentation Applications Menu.
                 ;;
                 [Ss] | [Ss][Pp]*)
                 f_menu_app_spreadsheets      # Spreadsheet Applications Menu.
                 ;;
                 [Tt] | [Tt][Ee]*)
                 f_menu_cat_text              # Text Applications Menu.
                 ;;
                 [Tt] | [Tt][Oo]*)
                 f_menu_app_todo
                 ;;
            esac                 # End of Office Application Category case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM
            #
            BOF=$MENU_ITEM  # Outputs $MENU_ITEM.
            #
      done  # End of Office Application Category until loop.
            #
      unset BOF MENU_ITEM  # Throw out this variable.
} # End of function f_menu_cat_office
#
# +----------------------------------------+
# |     Function f_menu_app_accounting     |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MAA, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_accounting () {
      f_initvars_menu_app
      until [ $MAA -eq 0 ]
      do    # Start of Accounting Applications until loop.
            #MAA clipf         - Track Your incomes and expenses, written for Python2.
            #MAA hledger       - Same as "ledger" but using the Haskell Programming Language.
            #MAA hledger-chart - Hledger pie chart generator.
            #MAA hledger-vty   - Hledger n-curses style interface.
            #MAA hledger-web   - Hledger web interface.
            #MAA ledger        - Ledger using double-entry.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-office.lib"
            MENU_TITLE="Accounting Applications Menu"
            DELIMITER="#MAA" #MAA This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MAA
            #
            f_menu_item_process $MAA  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of Calculator Applications case statement.
                 clipf' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Cc] | [Cc][Ll]*)
                 APP_NAME="clipf"
                 f_application_run
                 ;;
                 hledger' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Hh] | [Hh][Ll] | [Hh][Ll][Ee] | [Hh][Ll][Ee][Dd] | [Hh][Ll][Ee][Dd][Gg] | [Hh][Ll][Ee][Dd][Gg][Ee] | [Hh][Ll][Ee][Dd][Gg][Ee][Rr])
                 APP_NAME="hledger"
                 f_application_run
                 ;;
                 hledger-chart' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Hh] | [Hh][Ll] | [Hh][Ll][Ee] | [Hh][Ll][Ee][Dd] | [Hh][Ll][Ee][Dd][Gg] | [Hh][Ll][Ee][Dd][Gg][Ee] | [Hh][Ll][Ee][Dd][Gg][Ee][Rr] | [Hh][Ll][Ee][Dd][Gg][Ee][Rr][-] | [Hh][Ll][Ee][Dd][Gg][Ee][Rr][-][Cc] | [Hh][Ll][Ee][Dd][Gg][Ee][Rr][-][Cc]*)
                 APP_NAME="hledger-chart"
                 f_application_run
                 ;;
                 hledger-vty' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Hh] | [Hh][Ll] | [Hh][Ll][Ee] | [Hh][Ll][Ee][Dd] | [Hh][Ll][Ee][Dd][Gg] | [Hh][Ll][Ee][Dd][Gg][Ee] | [Hh][Ll][Ee][Dd][Gg][Ee][Rr] | [Hh][Ll][Ee][Dd][Gg][Ee][Rr][-] | [Hh][Ll][Ee][Dd][Gg][Ee][Rr][-][Vv]*)
                 APP_NAME="hledger-vty"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 hledger-web' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Hh] | [Hh][Ll] | [Hh][Ll][Ee] | [Hh][Ll][Ee][Dd] | [Hh][Ll][Ee][Dd][Gg] | [Hh][Ll][Ee][Dd][Gg][Ee] | [Hh][Ll][Ee][Dd][Gg][Ee][Rr] | [Hh][Ll][Ee][Dd][Gg][Ee][Rr][-] | [Hh][Ll][Ee][Dd][Gg][Ee][Rr][-][Ww]*)
                 APP_NAME="hledger-web"
                 f_application_run
                 ;;
                 ledger' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ll] | [Ll][Ee]*)
                 APP_NAME="ledger"
                 f_application_run
                 ;;
            esac                # End of Accounting Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MAA=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of Accounting Applications until loop.
            #
      unset MAA MENU_ITEM  # Throw out this variable.
} # End of f_menu_app_accounting
#
# +----------------------------------------+
# |     Function f_menu_app_calculators    |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MCC, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_calculators () {
      f_initvars_menu_app
      until [ $MCC -eq 0 ]
      do    # Start of Calculator Applications until loop.
            #MCC apcalc   - Arbitrary precision calculator, uses C-like language.
            #MCC bc       - Calculator.
            #MCC concalc  - Calculator, parser-algorithm of extcalc.
            #MCC dc       - RPN arbitrary precision reverse-polish calculator.
            #MCC genius   - General purpose calculator.
            #MCC orpie    - RPN Reverse Polish Notation calculator.
            #MCC qalc     - Qalculate! calculator customizable functions, units, precision.
            #MCC rpncalc  - RPN calculator trying to emulate an HP28S.
            #MCC tapecalc - Tape-like calculator.
            #MCC wcalc    - Scientific calculator.

            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-office.lib"
            MENU_TITLE="Calculator Applications Menu"
            DELIMITER="#MCC" #MCC This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MCC
            #
            f_menu_item_process $MCC  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of Calculator Applications case statement.
                 apcalc' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Aa] | [Aa][Pp]*)
                 APP_NAME="apcalc"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 bc' '*)
                 APP_NAME=$MENU_ITEM
                 f_how_to_quit_application "quit"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Bb] | [Bb][Cc])
                 APP_NAME="bc"
                 f_how_to_quit_application "quit"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 concalc' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Cc] | [Cc][Oo]*)
                 APP_NAME="concalc"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 dc' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Dd] | [Dd][Cc])
                 APP_NAME="dc"
                 f_application_run
                 ;;
                 genius' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Gg] | [Gg][Ee])
                 APP_NAME="genius"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 orpie' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Oo] | [Oo][Rr]*)
                 APP_NAME="orpie"
                 f_application_run
                 ;;
                 qalc' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Qq] | [Qq][Aa]*)
                 APP_NAME="qalc"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 rpncalc' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Rr] | [Rr][Pp]*)
                 APP_NAME="rpncalc"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 tapecalc' '*)
                 APP_NAME=$MENU_ITEM
                 f_how_to_quit_application "q"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Tt] | [Tt][Aa]*)
                 APP_NAME="tapecalc"
                 f_how_to_quit_application "q"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 wcalc' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Ww] | [Ww][Cc]*)
                 APP_NAME="wcalc"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
            esac                # End of Calculator Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MCC=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of Calculator Applications until loop.
            #
      unset MCC MENU_ITEM  # Throw out this variable.
} # End of f_menu_app_calculators
#
# +----------------------------------------+
# |      Function f_menu_app_calendar      |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MCA, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_calendar () {
      f_initvars_menu_app
      until [ $MCA -eq 0 ]
      do    # Start of Calendar Applications until loop.
            #MCA cal         - Displays a monthly calendar.
            #MCA calcurse    - Calendar ncurses-based.
            #MCA ccal        - Calendar color.
            #MCA clcal       - Calendar and appointment reminders.
            #MCA emacs-calfw - Displays a calendar view in the Emacs buffer.
            #MCA gcal        - Calendar, almost the same as cal.
            #MCA gcalcli     - Google calendar.
            #MCA mencal      - Calendar to track repeating periodic events every nn days.
            #MCA ncal        - Calendar with vertical days.
            #MCA pal         - Calendar with events.
            #MCA pcal        - Generate PostScript or HTML Calendars.
            #MCA pom         - Display phase of moon on given date.
            #MCA remind      - Calendar alarms, Sun rise/set, moon phases.
            #MCA when        - Calendar.
            #MCA wyrd        - Calendar, ncurses-based.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-office.lib"
            MENU_TITLE="Calendar Applications Menu"
            DELIMITER="#MCA" #MCA This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MCA
            #
            f_menu_item_process $MCA  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of Calendar Applications case statement.
                 cal' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Cc] | [Cc][Aa] | [Cc][Aa][Ll])
                 APP_NAME="cal"
                 f_application_run
                 ;;
                 calcurse' '*)
                 APP_NAME=$MENU_ITEM
                 f_how_to_quit_application "q"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Cc] | [Cc][Aa] | [Cc][Aa][Ll] | [Cc][Aa][Ll][Cc]*)
                 APP_NAME="calcurse"
                 f_how_to_quit_application "q"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 ccal' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Cc] | [Cc][Cc]*)
                 APP_NAME="ccal"
                 f_application_run
                 ;;
                 clcal' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Cc] | [Cc][Ll]*)
                 APP_NAME="clcal"
                 f_application_run
                 ;;
                 emacs-calfw' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ee][Mm]*)
                 APP_NAME="emacs-calfw"
                 f_application_run
                 ;;
                 gcal' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Gg] | [Gg][Cc] | [Gg][Cc][Aa] | [Gg][Cc][Aa][Ll])
                 APP_NAME="gcal"
                 f_application_run
                 ;;
                 gcalcli' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Gg] | [Gg][Cc] | [Gg][Cc][Aa] | [Gg][Cc][Aa][Ll] | [Gg][Cc][Aa][Ll][Cc]*)
                 APP_NAME="gcalcli"
                 f_application_run
                 ;;
                 mencal' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Mm] | [Mm][Ee]*)
                 APP_NAME="mencal"
                 f_application_run
                 ;;
                 ncal' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Nn] | [Nn][Cc]*)
                 APP_NAME="ncal"
                 f_application_run
                 ;;
                 pal' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Pp] | [Pp][Aa]*)
                 APP_NAME="pal"
                 f_application_run
                 ;;
                 pcal' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Pp] | [Pp][Cc]*)
                 APP_NAME="pcal"
                 f_application_run
                 ;;
                 pom' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Pp] | [Pp][Oo]*)
                 APP_NAME="pom"
                 f_application_run
                 ;;
                 remind' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Rr] | [Rr][Ee] | [Rr][Ee][Mm]*)
                 APP_NAME="remind"
                 f_application_run
                 ;;
                 when' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ww] | [Ww][Hh]*)
                 APP_NAME="when"
                 f_application_run
                 ;;
                 wyrd' '*)
                 APP_NAME=$MENU_ITEM
                 f_how_to_quit_application "Q"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Ww] | [Ww][Yy]*)
                 APP_NAME="wyrd"
                 f_how_to_quit_application "Q"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
            esac                # End of Calendar Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MCA=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of Calendar Applications until loop.
            #
      unset MCA MENU_ITEM  # Throw out this variable.
} # End of f_menu_app_calendar
#
# +----------------------------------------+
# |       Function f_menu_app_clocks       |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MCL, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_clocks () {
      f_initvars_menu_app
      until [ $MCL -eq 0 ]
      do    # Start of Clock Applications until loop.
            #MCL binary-clock     - Binary numbers 1/0 tells time.
            #MCL cclock           - Digital clock with huge numbers fills entire screen.
            #MCL clockywock       - Analog clock, ncurses-based.
            #MCL grandfatherclock - Clock chimes Big-Ben, Cuckoo, 'Close Encounters'.
            #MCL saytime          - Audio clock.
            #MCL tbclock          - Binary clock, binary numbers 1/0 tells time.
            #MCL vtclock          - Full-screen clock also shows 1 line text, ncurses-based.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-office.lib"
            MENU_TITLE="Clock Applications Menu"
            DELIMITER="#MCL" #MCL This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MCL
            #
            f_menu_item_process $MCL  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of Clock Applications case statement.
                 binary-clock' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Bb] | [Bb][Ii]*)
                 APP_NAME="binary-clock"
                 f_application_run
                 ;;
                 cclock' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Cc] | [Cc][Cc]*)
                 APP_NAME="cclock"
                 f_application_run
                 ;;
                 clockywock' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Cc] | [Cc][Ll]*)
                 APP_NAME="clockywock"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 grandfatherclock' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Gg] | [Gg][Rr]*)
                 APP_NAME="grandfatherclock"
                 f_application_run
                 ;;
                 saytime' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ss] | [Ss][Aa]*)
                 APP_NAME="saytime"
                 f_application_run
                 ;;
                 tbclock' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Tt] | [Tt][Bb]*)
                 APP_NAME="tbclock"
                 f_application_run
                 ;;
                 vtclock' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Vv] | [Vv][Tt]*)
                 APP_NAME="vtclock"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
            esac                # End of Clock Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MCL=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of Clock Applications until loop.
            #
      unset MCL MENU_ITEM  # Throw out this variable.
} # End of f_menu_app_clocks
#
# +----------------------------------------+
# |      Function f_menu_app_contacts      |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MCO, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_contacts () {
      f_initvars_menu_app
      until [ $MCO -eq 0 ]
      do    # Start of Contact List Applications until loop.
            #MCO abook - Address book with or w/o mutt. With tabs for fields of information.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-office.lib"
            MENU_TITLE="Contact List Applications Menu"
            DELIMITER="#MCO" #MCO This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MCO
            #
            f_menu_item_process $MCO  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of Contact List Applications case statement.
                 abook' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Aa] | [Aa][Bb]*)
                 APP_NAME="abook"
                 f_application_run
                 ;;
            esac                # End of Contact List Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MCO=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of Contact List Applications until loop.
            #
      unset MCO MENU_ITEM  # Throw out this variable.
} # End of f_menu_app_contacts
#
# +----------------------------------------+
# |         Function f_menu_app_note       |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MNO, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_note () {
      f_initvars_menu_app
      until [ $MNO -eq 0 ]
      do    # Start of Note Applications until loop.
            #MNO diary    - Diary and To Do List uses commands date, grep, and text editor.
            #MNO diary-f  - Fork of "diary" enhanced "view"/"cat" actions, non-latin locales.
            #MNO hnb      - Hierarchical notebook.
            #MNO org-mode - Emacs plugin for notes, ToDo lists, and project planning.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-office.lib"
            MENU_TITLE="Note Applications Menu"
            DELIMITER="#MNO" #MNO This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MNO
            #
            f_menu_item_process $MNO  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of Note Applications case statement.
                 diary' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Dd] | [Dd][Ii] | [Dd][Ii][Aa] | [Dd][Ii][Aa][Rr] | [Dd][Ii][Aa][Rr][Yy])
                 APP_NAME="diary"
                 f_application_run
                 ;;
                 diary-f' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Dd] | [Dd][Ii] | [Dd][Ii][Aa] | [Dd][Ii][Aa][Rr] | [Dd][Ii][Aa][Rr][Yy] | [Dd][Ii][Aa][Rr][Yy][-] | [Dd][Ii][Aa][Rr][Yy][-][Ff])
                 APP_NAME="diary-f"
                 f_application_run
                 ;;
                 hnb' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Hh] | [Hh][Nn]*)
                 APP_NAME="hnb"
                 f_application_run
                 ;;
                 org-mode' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Oo] | [Oo][Rr]*)
                 APP_NAME="org-mode"
                 f_application_run
                 ;;
            esac                # End of Note Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MNO=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of Note Applications until loop.
            #
      unset MNO MENU_ITEM  # Throw out this variable.
} # End of f_menu_app_note
#
# +----------------------------------------+
# |       Function f_menu_app_pdfps       |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MPS, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_pdfps () {
      f_initvars_menu_app
      until [ $MPS -eq 0 ]
      do    # Start of Text Tool Applications until loop.
            #MPS diffpdf  - Compare PDF files.
            #MPS fbdjvu   - DjVu viewer similar to fbpdf.
            #MPS fbgs     - GhostScript, PostScript, and PDF viewer.
            #MPS fbpdf    - Framebuffer PDF viewer based on MuPDF with Vim keybindings.
            #MPS gs       - GhostScript, PostScript, and PDF viewer.
            #MPS jfbview  - Image viewer and framebuffer PDF viewer based on Imlib2.
            #MPS pdfjam   - Merge PDF files into a single file.
            #MPS pdftex   - Typesetter creates PDF files.
            #MPS pdftk    - Merge/split, rotate, watermark, bookmarks/metadata attach files.
            #MPS pdftops  - Converts PDF to PS (PostScript) format.
            #MPS pstotext - Extract text from PS  (PostScript) and PDF files.
            #MPS ps2ascii - Converts PS (PostScript) to text format.
            #MPS ps2pdf   - Converts PS (PostScript) to PDF format.
            #MPS sdf      - Uses simple markup language output formats PS/PDF/HTML/RTF etc.
            #MPS sdop     - Converts a Simplified Docbook XML file to PS (PostScript).
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-office.lib"
            MENU_TITLE="PDF and PS Applications Menu"
            DELIMITER="#MPS" #MPS This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MPS
            #
            f_menu_item_process $MPS  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of PDF and PS Applications case statement.
                 diffpdf' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Dd] | [Dd][Ii]*)
                 APP_NAME="diffpdf"
                 f_application_run
                 ;;
                 fbdjvu' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ff] | [Ff][Bb] | [Ff][Bb][Dd]*)
                 APP_NAME="fbdjvu"
                 f_application_run
                 ;;
                 fbgs' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ff] | [Ff][Bb] | [Ff][Bb][Gg]*)
                 APP_NAME="fbgs"
                 f_application_run
                 ;;
                 fbpdf' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ff] | [Ff][Bb] | [Ff][Bb][Pp]*)
                 APP_NAME="fbpdf"
                 f_application_run
                 ;;
                 gs' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Gg] | [Gg][Ss])
                 APP_NAME="gs"
                 f_application_run
                 ;;
                 jfbview' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Jj] | [Jj][Ff]*)
                 APP_NAME="jfbview"
                 f_application_run
                 ;;
                 pdfjam' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Pp] | [Pp][Dd] | [Pp][Dd][Ff] | [Pp][Dd][Ff][Jj]*)
                 APP_NAME="pdfjam"
                 f_application_run
                 ;;
                 pdftex' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Pp] | [Pp][Dd] | [Pp][Dd][Ff] | [Pp][Dd][Ff][Tt] | [Pp][Dd][Ff][Tt][Ee]*)
                 APP_NAME="pdftex"
                 f_application_run
                 ;;
                 pdftk' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Pp] | [Pp][Dd] | [Pp][Dd][Ff] | [Pp][Dd][Ff][Tt] | [Pp][Dd][Ff][Tt][Kk])
                 APP_NAME="pdftk"
                 f_application_run
                 ;;
                 pdftops' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Pp] | [Pp][Dd] | [Pp][Dd][Ff] | [Pp][Dd][Ff][Tt] | [Pp][Dd][Ff][Tt][Oo]*)
                 APP_NAME="pdftops"
                 f_application_run
                 ;;
                 pstotext' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Pp] | [Pp][Ss] | [Pp][Ss][Tt]*)
                 APP_NAME="pstotext"
                 f_application_run
                 ;;
                 ps2ascii' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Pp] | [Pp][Ss] | [Pp][Ss][2] | [Pp][Ss][2][Aa]*)
                 APP_NAME="ps2ascii"
                 f_application_run
                 ;;
                 ps2eps' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Pp] | [Pp][Ss] | [Pp][Ss][2] | [Pp][Ss][2][Ee]*)
                 APP_NAME="ps2eps"
                 f_application_run
                 ;;
                 ps2pdf' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Pp] | [Pp][Ss] | [Pp][Ss][2] | [Pp][Ss][2][Pp]*)
                 APP_NAME="ps2pdf"
                 f_application_run
                 ;;
                 sdf' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ss] | [Ss][Dd] | [Ss][Dd][Ff])
                 APP_NAME="sdf"
                 f_application_run
                 ;;
                 sdop' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ss] | [Ss][Dd] | [Ss][Dd][Oo]*)
                 APP_NAME="sdop"
                 f_application_run
                 ;;
            esac                # End of PDF and PS Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MPS=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of PDF and PS Applications until loop.
            #
      unset MPS MENU_ITEM  # Throw out this variable.
} # End of f_menu_app_pdfps
#
# +----------------------------------------+
# |    Function f_menu_app_presentation    |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MPR, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_presentation () {
      f_initvars_menu_app
      until [ $MPR -eq 0 ]
      do    # Start of Presentation Applications until loop.
            #MPR tpp  - "Text Presentation Program", slideshow, ncurses-based.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-office.lib"
            MENU_TITLE="Presentation Applications Menu"
            DELIMITER="#MPR" #MPR This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MPR
            #
            f_menu_item_process $MPR  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of Presentation Applications case statement.
                 tpp' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Tt] | [Tt][Pp]*)
                 APP_NAME="tpp"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
            esac                # End of Presentation Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MPR=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of Presentation Applications until loop.
            #
      unset MPR MENU_ITEM  # Throw out this variable.
} # End of function f_menu_app_presentation
#
# +----------------------------------------+
# |    Function f_menu_app_spreadsheets    |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MSP, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_spreadsheets () {
      f_initvars_menu_app
      until [ $MSP -eq 0 ]
      do    # Start of Spreadsheet Applications until loop.
            #MSP oleo - Full-screen spreadsheet having a more Emacs-like feel.
            #MSP sc   - Spreadsheet.
            #MSP slsc - Spreadsheet based on sc.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-office.lib"
            MENU_TITLE="Spreadsheet Applications Menu"
            DELIMITER="#MSP" #MSP This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MSP
            #
            f_menu_item_process $MSP  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of Spreadsheet Applications case statement.
                 oleo' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Oo] | [Oo][Ll]*)
                 APP_NAME="oleo"
                 f_application_run
                 ;;
                 sc' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ss] | [Ss][Cc])
                 APP_NAME="sc"
                 f_application_run
                 ;;
                 slsc' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ss] | [Ss][Ll]*)
                 APP_NAME="slsc"
                 f_application_run
                 ;;
            esac                # End of Spreadsheet Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MSP=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of Spreadsheet Applications until loop.
            #
      unset MSP MENU_ITEM  # Throw out this variable.
} # End of f_menu_app_spreadsheets
#
# +----------------------------------------+
# |         Function f_menu_cat_text       |
# +----------------------------------------+
#
#  Inputs: None
#    Uses: BTX, MENU_ITEM, MAX
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_cat_text () {
      f_initvars_menu_app
      BTX="" # Initialize variable.
      until [ $BTX -eq 0 ]
      do    # Start of Text Application Category until loop.
            #BTX Compare     - Show differences between text files.
            #BTX Converters  - Convert between text document/file formats.
            #BTX Editors     - Create/Edit text documents/files.
            #BTX Editors2    - Create/Edit text documents/files.
            #BTX Editors3    - Create/Edit text documents/files.
            #BTX Markup Docs - Create a single source document, publish in many formats.
            #BTX Tools       - Viewers, spell-check, dictionaries.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-office.lib"
            MENU_TITLE="Text Application Category Menu"
            DELIMITER="#BTX" #BTX This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read BTX
            #
            f_menu_item_process $BTX  # Outputs $MENU_ITEM. $BTX
            ERROR=0 # Reset error flag.
            #
            case $MENU_ITEM in # Start of Text Application Category case statement.
                 [Cc] | [Cc][Oo] | [Cc][Oo][Mm]*)
                 f_menu_app_text_compare      # Text Compare Application Menu.
                 ;;               
                 [Cc] | [Cc][Oo] | [Cc][Oo][Nn]*)
                 f_menu_app_text_converters   # Text Converter Application Menu.
                 ;;
                 [Ee] | [Ee][Dd] | [Ee][Dd][Ii] | [Ee][Dd][Ii][Tt] | [Ee][Dd][Ii][Tt][Oo] | [Ee][Dd][Ii][Tt][Oo][Rr] | [Ee][Dd][Ii][Tt][Oo][Rr][Ss])
                 f_menu_app_text_editors      # Text Editor Application Menu.
                 ;;
                 [Ee] | [Ee][Dd] | [Ee][Dd][Ii] | [Ee][Dd][Ii][Tt] | [Ee][Dd][Ii][Tt][Oo] | [Ee][Dd][Ii][Tt][Oo][Rr] | [Ee][Dd][Ii][Tt][Oo][Rr][Ss]2)
                 f_menu_app_text_editors2     # Text Editor Application Menu.
                 ;;
                 [Ee] | [Ee][Dd] | [Ee][Dd][Ii] | [Ee][Dd][Ii][Tt] | [Ee][Dd][Ii][Tt][Oo] | [Ee][Dd][Ii][Tt][Oo][Rr] | [Ee][Dd][Ii][Tt][Oo][Rr][Ss]3)
                 f_menu_app_text_editors3     # Text Editor Application Menu.
                 ;;
                 [Mm] | [Mm][Aa]*)
                 f_menu_app_text_markup_language
                                              # Text Markup Application Menu.
                 ;;
                 [Tt] | [Tt][Oo]*)
                 f_menu_app_text_tools        # Text Tool Application Menu.
                 ;;
            esac                 # End of Text Application Category case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM
            #
            BTX=$MENU_ITEM  # Outputs $MENU_ITEM.
            #
      done  # End of Text Application Category until loop.
            #
      unset BTX MENU_ITEM  # Throw out this variable.
} # End of function f_menu_cat_text
#
# +----------------------------------------+
# |    Function f_menu_app_text_compare    |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MTC, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_text_compare () {
      f_initvars_menu_app
      until [ $MTC -eq 0 ]
      do    # Start of Text Compare Applications until loop.
            #MTC cmp       - Compares 2 text files.
            #MTC colordiff - Differences between 2 text files shown in color.
            #MTC comm      - Compares 2 sorted files line by line.
            #MTC diff      - Differences between 2 text files shown using <> signs.
            #MTC diff3     - Differences between 3 text files
            #MTC imediff2  - Interactive 2-way file merge.
            #MTC since     - Shows new changes in log files since last run. Tail work-alike.
            #MTC vimdiff   - Differences between 2 text files shown in color highlights.
            #MTC wdiff     - Differences between 2 text files shown using +/- signs.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-office.lib"
            MENU_TITLE="Text Compare Applications Menu"
            DELIMITER="#MTC" #MTC This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MTC
            #
            f_menu_item_process $MTC  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of Text Compare Applications case statement.
                 cmp' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Cc] | [Cc][Mm] | [Cc][Mm][Pp])
                 APP_NAME="cmp"
                 f_application_run
                 ;;
                 colordiff' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Cc] | [Cc][Oo] | [Cc][Oo][Ll]*)
                 APP_NAME="colordiff"
                 f_application_run
                 ;;
                 comm' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Cc] | [Cc][Oo] | [Cc][Oo][Mm]*)
                 APP_NAME="comm"
                 clear # Blank the screen.
                 echo "comm - compare two sorted files line by line." 
                 echo
                 echo "Usage:"
                 echo "comm [OPTION]... FILE1 FILE2"
                 echo
                 echo "Output is in three columns of quoted lines."
                 echo
                 echo "  Column 1      Column 2          Column 3"
                 echo "Lines unique  Lines unique      Lines common"
                 echo "  to FILE1      to FILE2     to FILE1 and FILE2"
                 echo
                 echo "OPTIONS:"
                 echo "         -1                 Suppress column 1."
                 echo "         -2                 Suppress column 2."
                 echo "         -3                 Suppress column 3."
                 echo "         --no-check order   Do not check files for sort order."
                 echo 
                 echo "*** For more help type: 'man comm'"
                 echo "                        'comm --help'"
                 echo
                 f_press_enter_key_to_continue
                 f_application_run
                 ;;
                 diff' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Dd] | [[Dd][Ii] | [[Dd][Ii][Ff] | [[Dd][Ii][Ff][Ff])
                 APP_NAME="diff"
                 f_application_run
                 ;;
                 diff3' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Dd] | [[Dd][Ii] | [[Dd][Ii][Ff] | [[Dd][Ii][Ff][Ff] | [[Dd][Ii][Ff][Ff]3)
                 APP_NAME="diff3"
                 f_application_run
                 ;;
                 imediff2' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ii] | [Ii][Mm]*)
                 APP_NAME="imediff2"
                 f_application_run
                 ;;
                 since' '* | 'sudo since '* | 'sudo since')
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ss] | [Ss][Ii]*)
                 APP_NAME="since"
                 f_application_run
                 ;;
                 vimdiff' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Vv] | [Vv][Ii]*)
                 APP_NAME="vimdiff"
                 f_application_run
                 ;;
                 wdiff' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ww] | [Ww][Dd]*)
                 APP_NAME="wdiff"
                 f_application_run
                 ;;
            esac                # End of Text Compare Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MTC=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of Text Compare Applications until loop.
            #
      unset MTC MENU_ITEM  # Throw out this variable.
} # End of f_menu_app_text_compare
#
# +----------------------------------------+
# |   Function f_menu_app_text_converters  |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MTV, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_text_converters () {
      f_initvars_menu_app
      until [ $MTV -eq 0 ]
      do    # Start of Text Converter Applications until loop.
            #MTV txt2html   - Converts plain ASCII text to HTML format.
            #MTV txt2man    - Converts plain ASCII text to man format.
            #MTV txt2pdbdoc - Converts plain ASCII text to PDB doc format for Palm Pilots.
            #MTV txt2regex  - Converts human sentences to regex. Regular Expression Wizard.
            #MTV txt2tags   - Converts plain ASCII text to a variety of formats.
            #MTV unoconv    - Converts any document format that LibreOffice imports/exports.
            #MTV unrtf      - Converts RTF to HTML, LaTeX, txt, PS.
            #MTV wp2x       - Converts WordPerfect 5.x documents to HTML, LaTeX, txt, troff.
            #MTV xmlto      - Converts XML to DVI XSL-FO, HTML, XHTML, epub, man, PDF, PS.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-office.lib"
            MENU_TITLE="Text Converter Applications Menu"
            DELIMITER="#MTV" #MTV This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MTV
            #
            f_menu_item_process $MTV  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of Text Converter Applications case statement.
                 txt2html' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Tt] | [Tt][Xx] | [Tt][Xx][Tt] | [Tt][Xx][Tt][2] | [Tt][Xx][Tt][2][Hh]*)
                 APP_NAME="man txt2html"
                 clear # Blank the screen.
                 echo "txt2html - Convert plain text files to html." 
                 echo
                 echo "Usage:"
                 echo "txt2html [ --append_file filename ] [ --append_head filename ]"
                 echo "         [ --body_deco string ] [ --bold_delimiter string ]"
                 echo "         [ --bullets string ] [ --bullets_ordered string ]"
                 echo "         [ --caps_tag tag ]"
                 echo
                 echo "*** For more help type: 'man txt2html'"
                 echo "                        'txt2html --help'"
                 echo
                 echo "Now show help. Usage: man txt2html"
                 f_press_enter_key_to_continue
                 f_application_run
                 ;;
                 txt2man' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Tt] | [Tt][Xx] | [Tt][Xx][Tt] | [Tt][Xx][Tt][2] | [Tt][Xx][Tt][2][Mm]*)
                 APP_NAME="man txt2man"
                 clear # Blank the screen.
                 echo "txt2man - Convert plain text files to man pages." 
                 echo
                 echo "Usage:"
                 echo "txt2man [-hpTX] [-t mytitle] [-P pname] [-r rel] [-s sect] [-v vol]"
                 echo "        [-I txt] [-B txt] [-d date] [ifile]"
                 echo
                 echo "*** For more help type: 'man txt2man'"
                 echo "                        'txt2man --help'"
                 echo
                 echo "Now show help. Usage: man txt2man"
                 f_press_enter_key_to_continue
                 f_application_run
                 ;;
                 txt2pdbdoc' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Tt] | [Tt][Xx] | [Tt][Xx][Tt] | [Tt][Xx][Tt][2] | [Tt][Xx][Tt][2][Pp]*)
                 APP_NAME="man txt2pdbdoc"
                 clear # Blank the screen.
                 echo "txt2pdbdoc - Convert plain text files to (Palm Pilot Database) Doc file *.pdb."
                 echo "             for PalmPilots & DocReaders. (Does anyone still have a PalmPilot?)"
                 echo
                 echo "Usage: txt2pdbdoc [-b] [-c] [-v] document-name file.txt file.pdb"
                 echo "       txt2pdbdoc -d [-D] [-v] file.pdb [ file.txt ]"
                 echo "       txt2pdbdoc -V"
                 echo
                 echo "*** For more help type: 'man txt2pdbdoc'"
                 echo "                        'txt2pdbdoc --help'"
                 echo
                 echo "Now show help. Usage: man txt2pdbdoc"
                 f_press_enter_key_to_continue
                 f_application_run
                 ;;
                 txt2regex' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Tt] | [Tt][Xx] | [Tt][Xx][Tt] | [Tt][Xx][Tt][2] | [Tt][Xx][Tt][2][Rr]*)
                 APP_NAME="man txt2regex"
                 clear # Blank the screen.
                 echo "txt2regex - Convert human sentences to regex." 
                 echo
                 echo "Usage:"
                 echo "txt2regex --all|--prog <p1,p2,...,pN>"
                 echo
                 echo "*** For more help type: 'man txt2regex'"
                 echo "                        'txt2regex --help'"
                 echo
                 echo "Now show help. Usage: man txt2regex"
                 f_press_enter_key_to_continue
                 f_application_run
                 ;;
                 txt2tags' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Tt] | [Tt][Xx] | [Tt][Xx][Tt] | [Tt][Xx][Tt][2] | [Tt][Xx][Tt][2][Tt]*)
                 APP_NAME="man txt2tags"
                 clear # Blank the screen.
                 echo "txt2tags - Convert plain text files to ASCII Art, AsciiDoc, Creole, DocBook,"
                 echo "           DokuWiki, Google Code Wiki, HTML, LaTeX, Lout, MagicPoint, Man page,"
                 echo "           MoinMoin, PageMaker, Plain Text, PmWiki, SGML, Wikipedia and XHTML."
                 echo 
                 echo "Usage:"
                 echo "txt2tags [OPTIONS] [FILE]... "
                 echo
                 echo "*** For more help type: 'man txt2tags'"
                 echo "                        'txt2tags --help'"
                 echo
                 echo "Now show help. Usage: man txt2tags"
                 f_press_enter_key_to_continue
                 f_application_run
                 ;;
                 unoconv' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Uu] | [Uu][Nn] | [Uu][Nn][Oo]*)
                 APP_NAME="unoconv"
                 f_application_run
                 ;;
                 unrtf' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Uu] | [Uu][Nn] | [Uu][Nn][Rr]*)
                 APP_NAME="unrtf"
                 f_application_run
                 ;;
                 wp2x' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ww] | Ww][Pp]*)
                 APP_NAME="wp2x"
                 f_application_run
                 ;;
                 xmlto' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Xx] | Xx][Mm]*)
                 APP_NAME="xmlto"
                 f_application_run
                 ;;
            esac                # End of Text Converter Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MTV=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of Text Converter Applications until loop.
            #
      unset MTV MENU_ITEM  # Throw out this variable.
} # End of f_menu_app_text_converters
#
# +----------------------------------------+
# |     Function f_menu_app_text_editors   |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MTE, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_text_editors () {
      f_initvars_menu_app
      until [ $MTE -eq 0 ]
      do    # Start of Text Editor Applications until loop.
            #MTE aoeui         - Very small editor for Dvorak layout keyboards.
            #MTE dav           - Text editor.
            #MTE dex           - Support for ctags and parsing compiler errors.
            #MTE e3em          - Very small editor with emacs-like key bindings.
            #MTE e3vi          - Very small editor with vi-like key bindings.
            #MTE e3pi          - Very small editor with pico-like key bindings.
            #MTE e3ne          - Very small editor with nedit-like key bindings.
            #MTE e3ws          - Very small editor with Wordstar-like key bindings.
            #MTE ed            - Classic CLI text editor.
            #MTE efte          - Configurable editor, drop-down menus, ncurses-based.
            #MTE elvis-console - vi-clone. Multiple files/windows, spell-check, highlight.
            #MTE emacs         - Full screen text editor with plugins.
            #MTE fte-console   - fte for consoles, no internationalization I18N support.
            #MTE fte-terminal  - fte for xterm, vt100 terminals.
            #MTE groff         - Format text via macros, create man pages to PS printers.
            #MTE MORE...        - For more text editor applications.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-office.lib"
            MENU_TITLE="Text Editor #1 Applications Menu"
            DELIMITER="#MTE" #MTE This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MTE
            #
            f_menu_item_process $MTE  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of Text Editor Applications case statement.
                 aoeui' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Aa] | [Aa][Oo]*)
                 APP_NAME="aoeui"
                 f_application_run
                 ;;
                 dav' '*)
                 APP_NAME=$MENU_ITEM
                 f_how_to_quit_application "<F5>"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Dd] | [Dd][Aa]*)
                 APP_NAME="dav"
                 f_how_to_quit_application "<F5>"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 dex' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Dd] | [Dd][Ee]*)
                 APP_NAME="dex"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 e3em' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ee] | [3][Ee]*)
                 APP_NAME="e3em"
                 f_application_run
                 ;;
                 e3vi' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ee] | [3][Vv]*)
                 APP_NAME="e3vi"
                 f_application_run
                 ;;
                 e3pi' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ee] | [3][Pp]*)
                 APP_NAME="e3pi"
                 f_application_run
                 ;;
                 e3ne' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ee] | [3][Nn]*)
                 APP_NAME="e3ne"
                 f_application_run
                 ;;
                 e3ws' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ee] | [3][Ww]*)
                 APP_NAME="e3ws"
                 f_application_run
                 ;;
                 ed' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ee] | [Ee][Dd])
                 APP_NAME="ed"
                 f_application_run
                 ;;
                 efte' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ee] | [Ee][Ff])
                 APP_NAME="efte"
                 f_application_run
                 ;;
                 elvis-console' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ee] | [Ee][Ll]*)
                 APP_NAME="elvis-console"
                 f_application_run
                 ;;
                 emacs' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Ee] | [Ee][Mm]*)
                 APP_NAME="emacs"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 fte-console' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ff] | [Ff][Tt] | [Ff][Tt][Ee] | [Ff][Tt][Ee]-[Cc]*)
                 APP_NAME="fte-console"
                 f_application_run
                 ;;
                 fte-terminal' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ff] | [Ff][Tt] | [Ff][Tt][Ee] | [Ff][Tt][Ee]-[Tt]*)
                 APP_NAME="fte-terminal"
                 f_application_run
                 ;;
                 groff' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Gg] | [Gg][Rr]*)
                 APP_NAME="groff"
                 clear # Blank the screen.
                 echo "groff - Use macro command language to output formatted text"
                 echo "        for PostScript printers."
                 echo
                 echo "Usage:" 
                 echo "groff [-abcegiklpstzCEGNRSUVXZ] [-d cs] [-D arg] [-f fam] [-F dir] [-I dir]"
                 echo "      [-K arg] [-L arg] [-m name] [-M dir] [-n num] [-o list] [-P arg]"
                 echo "      [-r cn] [-T dev] [-w name] [-W name] [file ...]"
                 echo "groff -h | --help"
                 echo "groff -v | --version [OPTION ...]"
                 echo
                 echo "*** For more help type: 'man $APP_NAME'"
                 echo "                        '$APP_NAME --help'"
                 echo
                 echo "Now show help. Usage: man $APP_NAME"
                 APP_NAME="groff --help"
                 f_press_enter_key_to_continue
                 f_application_run
                 ;;
                 [Mm] | [Mm][Oo] | [Mm][Oo][Rr] | [Mm][Oo][Rr][Ee]*)
                 f_menu_app_text_editors2
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
            esac                # End of Text Editor Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MTE=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of Text Editor Applications until loop.
            #
      unset MTE MENU_ITEM  # Throw out this variable.
} # End of f_menu_app_text_editors
#
# +----------------------------------------+
# |    Function f_menu_app_text_editors2   |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MTF, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_text_editors2 () {
      f_initvars_menu_app
      until [ $MTF -eq 0 ]
      do    # Start of Text Editor Applications2 until loop.
            #MTF jed       - JED ncurses-based. Also consider package: jed-extra.
            #MTF jmacs     - Joe Editor, GNU-EMACS emulation mode.
            #MTF joe       - Joe editor. Ctrl-K H for help.
            #MTF jove      - Jonathan's Own Version of Emacs, ncurses-based.
            #MTF jpico     - Joe Editor, PICO emulation mode.
            #MTF jstar     - Joe Editor, WordStar emulation mode.
            #MTF le        - LE editor text/hex mode, drop-down menus, ncurses-based.
            #MTF ledit     - line editor used with interactive commands.
            #MTF levi      - Very small vi-clone. From the 1980's.
            #MTF mg        - Microscopic GNU Emacs-style editor.
            #MTF nano      - Simple full-screen text editor more powerful than pico.
            #MTF nano-tiny - tiny build of nano.
            #MTF ne        - Nice Editor. Drop-down menus, ncurses-based. 
            #MTF nvi       - vi-clone as close to vi as possible.
            #MTF pico      - Simple full-screen text editor.
            #MTF MORE...   - For more text editor applications.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-office.lib"
            MENU_TITLE="Text Editor #2 Applications Menu"
            DELIMITER="#MTF" #MTF This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MTF
            #
            f_menu_item_process $MTF  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of Text Editor Applications2 case statement.
                 jed' '*)
                 APP_NAME_TMP=$MENU_ITEM # Save jed <OPTIONS>.
                 APP_NAME=jed-extra  # Install jed-extra package before running/installing jed.
                 f_application_install_question
                 APP_NAME=$APP_NAME_TMP
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Jj] | [Jj][Ee]*)
                 APP_NAME=jed-extra  # Install jed-extra package before running/installing jed.
                 f_application_install_question
                 APP_NAME="jed"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 jmacs' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Jj] | [Jj][Mm]*)
                 APP_NAME=jmacs
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 joe' '*)
                 APP_NAME=$MENU_ITEM
                 f_how_to_quit_application "Ctrl-k x"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Jj] | [Jj][Oo]*)
                 APP_NAME="joe"
                 clear # Blank the screen.
                 echo "joe - Text editor with 5 emulations of other text editors"
                 echo
                 echo "Usage:" 
                 echo "Regular Usage mode : joe [global-options] [ [local-options] filename ]..."
                 echo " WordStar emulation: jstar [global-options] [ [local-options] filename ]..."
                 echo "GNU-Emacs emulation: jmacs [global-options] [ [local-options] filename ]..."
                 echo "    Restricted mode: rjoe [global-options] [ [local-options] filename ]..."
                 echo "     PICO emulation: jpico [global-options] [ [local-options] filename ]..."
                 echo
                 echo "Available at: www.sourceforge.net/projects/joe-editor."
                 echo
                 echo "*** For more help type: 'man $APP_NAME'"
                 echo "                        '$APP_NAME --help'"
                 f_how_to_quit_application "Ctrl-k x" "no-clear"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 jove' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Jj] | [Jj][Oo] | [Jj][Oo][Vv]*)
                 APP_NAME="jove"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 jpico' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Jj][Pp] | [Jj][Pp][Ii]*)
                 APP_NAME="jpico"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 jstar' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Jj][Ss] | [Jj][Ss][Tt]*)
                 APP_NAME="jstar"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 le' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Ll] | [Ll][Ee])
                 APP_NAME="le"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 ledit' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Ll] | [Ll][Ee] | [Ll][Ee][Dd]*)
                 APP_NAME="ledit"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 levee' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Ll] | [Ll][Ee] | [Ll][Ee][Vv]*)
                 APP_NAME="levee"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 mg' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Mm] | [Mm][Gg])
                 APP_NAME="mg"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 nano' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Nn] | [Nn][Aa]*)
                 APP_NAME="nano"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 nano-tiny' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Nn] | [Nn][Aa] | [Nn][Aa][Nn] | [Nn][Aa][Nn][Oo] | [Nn][Aa][Nn][Oo][-]*)
                 APP_NAME="nano-tiny"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 ne' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Nn] | [Nn][Ee])
                 APP_NAME="ne"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 nvi' '*)
                 APP_NAME=$MENU_ITEM
                 f_how_to_quit_application "<esc> + :q!"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Nn] | [Nn][Vv]*)
                 APP_NAME="nvi"
                 f_how_to_quit_application "<esc> + :q!"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 pico' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Pp] | [Pp][Ii]*)
                 APP_NAME="pico"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Mm] | [Mm][Oo] | [Mm][Oo][Rr] | [Mm][Oo][Rr][Ee]*)
                 f_menu_app_text_editors3
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
            esac                # End of Text Editor Applications2 case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MTF=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of Text Editor2 Applications until loop.
            #
      unset MTF MENU_ITEM  # Throw out this variable.
} # End of f_menu_app_text_editors2
#
# +----------------------------------------+
# |    Function f_menu_app_text_editors3   |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MTG, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_text_editors3 () {
      f_initvars_menu_app
      until [ $MTG -eq 0 ]
      do    # Start of Text Editor Applications until loop.
            #MTG rjoe            - Joe Editor, only edit file(s) specified "rjoe <filenames>.
            #MTG the             - The Hessling Editor modeled on VM/CMS text editor, XEDIT.
            #MTG vi              - Classic full-screen text editor.
            #MTG vile            - "VI Like Emacs" vi "finger feel" but with emacs features.
            #MTG vim             - vi "Improved" text editor with more features than "vi".
            #MTG vim-nox         - vim with scripting support: Lua, Perl, Python, Ruby, TCL.
            #MTG vim-scripts     - plugins for vim, adding bells and whistles.
            #MTG vim-tiny        - Vi IMproved compact version.
            #MTG vim-vimoutliner - Script for building an outline editor on top of vim.
            #MTG wordgrinder     - Word processor, styles, drop-down menus, ncurses-based.
            #MTG zile            - Very small Emacs-subset editor.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-office.lib"
            MENU_TITLE="Text Editor #3 Applications Menu"
            DELIMITER="#MTG" #MTG This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MTG
            #
            f_menu_item_process $MTG  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of Text Editor Applications case statement.
                 rjoe' '*)
                 APP_NAME=$MENU_ITEM
                 f_how_to_quit_application "Ctrl-k x"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Rr] | [Rr][Jj] | [Rr][Jj][Oo]*)
                 APP_NAME="rjoe"
                 clear # Blank the screen.
                 echo "joe - Text editor with 5 emulations of other text editors"
                 echo
                 echo "Usage:" 
                 echo "Regular Usage mode : joe [global-options] [ [local-options] filename ]..."
                 echo " WordStar emulation: jstar [global-options] [ [local-options] filename ]..."
                 echo "GNU-Emacs emulation: jmacs [global-options] [ [local-options] filename ]..."
                 echo "    Restricted mode: rjoe [global-options] [ [local-options] filename ]..."
                 echo "     PICO emulation: jpico [global-options] [ [local-options] filename ]..."
                 echo
                 echo "Available at: www.sourceforge.net/projects/joe-editor."
                 echo
                 echo "*** For more help type: 'man $APP_NAME'"
                 echo "                        '$APP_NAME --help'"
                 f_how_to_quit_application "Ctrl-k x" "no-clear"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 the' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Tt] | [Tt][Hh]*)
                 APP_NAME="the"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 vi' '*)
                 APP_NAME=$MENU_ITEM
                 f_how_to_quit_application "<esc> + :q!"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Vv] | [Vv][Ii])
                 APP_NAME="vi"
                 f_how_to_quit_application "<esc> + :q!"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 vile' '*)
                 APP_NAME=$MENU_ITEM
                 f_how_to_quit_application "<esc> + :q!"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Vv] | [Vv][Ii] | [Vv][Ii][Ll]*)
                 APP_NAME="vile"
                 f_how_to_quit_application "<esc> + :q!"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 vim' '*)
                 APP_NAME=$MENU_ITEM
                 f_how_to_quit_application "<esc> + :q!"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Vv] | [Vv][Ii] | [Vv][Ii][Mm])
                 APP_NAME="vim"
                 f_how_to_quit_application "<esc> + :q!"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 vim-nox' '*)
                 APP_NAME=$MENU_ITEM
                 f_how_to_quit_application "<esc> + :q!"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Vv] | [Vv][Ii] | [Vv][Ii][Mm]-[Nn]*)
                 APP_NAME="vim-nox"
                 f_how_to_quit_application "<esc> + :q!"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 vim-scripts' '*)
                 APP_NAME=$MENU_ITEM
                 f_how_to_quit_application "<esc> + :q!"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Vv] | [Vv][Ii] | [Vv][Ii][Mm]-[Ss]*)
                 APP_NAME="vim-scripts"
                 f_how_to_quit_application "<esc> + :q!"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 vim-tiny' '*)
                 APP_NAME=$MENU_ITEM
                 f_how_to_quit_application "<esc> + :q!"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Vv] | [Vv][Ii] | [Vv][Ii][Mm]-[Tt]*)
                 APP_NAME="vim-tiny"
                 f_how_to_quit_application "<esc> + :q!"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 vim-outliner' '*)
                 APP_NAME=$MENU_ITEM
                 f_how_to_quit_application "<esc> + :q!"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Vv] | [Vv][Ii] | [Vv][Ii][Mm]-[Oo]*)
                 APP_NAME="vim-outliner"
                 f_how_to_quit_application "<esc> + :q!"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 wordgrinder' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Ww] | [Ww][Oo]*)
                 APP_NAME="wordgrinder"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 zile' '*)
                 APP_NAME=$MENU_ITEM
                 clear # Blank the screen.
                 echo zile - Small Emacs editor.
                 echo
                 echo "To quit $APP_NAME, type Ctrl-x followed by Ctrl-z and Ctrl-z again."
                 echo "(There is no way to cleanly return to the menu)."
                 echo "Running $APP_NAME will exit this menu script."
                 echo
                 echo -n "Run $APP_NAME and exit script? (y/N)? "
                 read ANS
                 case $ANS in
                      [Yy] | [Yy][Ee] | [Yy][Ee][Ss])
                      f_application_run
                      ;;
                      [Nn] | [Nn][Oo] | *)
                      PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                      ;;
                 esac
                 ;;
                 [Zz] | [Zz][Ii]*)
                 APP_NAME="zile"
                 clear # Blank the screen.
                 echo zile - Small Emacs editor.
                 echo
                 echo "To quit $APP_NAME, type Ctrl-x followed by Ctrl-z and Ctrl-z again."
                 echo "(There is no way to cleanly return to the menu)."
                 echo "Running $APP_NAME will exit this menu script."
                 echo
                 echo -n "Run $APP_NAME and exit script? (y/N)? "
                 read ANS
                 case $ANS in
                      [Yy] | [Yy][Ee] | [Yy][Ee][Ss])
                      f_application_run
                      ;;
                      [Nn] | [Nn][Oo] | *)
                      PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                      ;;
                 esac
                 ;;
            esac                # End of Text Editor Applications3 case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MTG=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of Text Editor Applications until loop.
            #
      unset MTG MENU_ITEM  # Throw out this variable.
} # End of f_menu_app_text_editors3
#
# +----------------------------------------+
# |Function f_menu_app_text_markup_language|
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MTM, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_text_markup_language () {
      f_initvars_menu_app
      until [ $MTM -eq 0 ]
      do    # Start of Text Markup Language Applications until loop.
            #MTM doconce  - Markup language to manipulate, transform, and convert text.
            #MTM sisu     - Markup language, publishing, search, write to many formats.
            #MTM stx2any  - Markup language, write to XHTML, HTML, XML, PS, LaTeX, etc.
            #MTM texinfo  - Markup language produces both printed & on-line web pages.
            #MTM udo      - Simpler markup language writes to 25 formats.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-office.lib"
            MENU_TITLE="Text Markup Language Applications Menu"
            DELIMITER="#MTM" #MTM This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MTM
            #
            f_menu_item_process $MTM  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error wc flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of Text Markup Language Applications case statement.
                 doconce' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Dd] | [Dd][Oo]*)
                 APP_NAME="doconce"
                 f_application_run
                 ;;
                 sisu' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ss] | [Ss][Ii]*)
                 APP_NAME="sisu"
                 f_application_run
                 ;;
                 stx2any' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ss] | [Ss][Tt]*)
                 APP_NAME="stx2any"
                 f_application_run
                 ;;
                 texinfo' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Tt] | [Tt][Ee]*)
                 APP_NAME="texinfo"
                 f_application_run
                 ;;
                 udo' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Uu] | [Uu][Dd]*)
                 APP_NAME="udo"
                 f_application_run
                 ;;
            esac                # End of Text Markup Language Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MTM=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of Text Markup Applications until loop.
            #
      unset MTM MENU_ITEM  # Throw out this variable.
} # End of f_menu_app_text_markup_language
#
# +----------------------------------------+
# |     Function f_menu_app_text_tools     |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MTT, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_text_tools () {
      f_initvars_menu_app
      until [ $MTT -eq 0 ]
      do    # Start of Text Tool Applications until loop.
            #MTT acheck   - Check grammar.
            #MTT antiword - Microsoft Word document viewer/converter to txt, pdf, ps, xml.
            #MTT aspell   - Spell check allows text files as input with user dictionary.
            #MTT dict     - On-line dictionary, client application queries a dictd server.
            #MTT dictd    - Dictionary Server database. dict-gcide, dict-wn recommended.
            #MTT hunspell - Spell check allows keyboard or files as input w/user dictionary.
            #MTT ispell   - Spell check allows text files as input with user dictionary.
            #MTT spell    - Spell check allows keyboard or text files as input.
            #MTT wc       - Word count, also counts lines, characters, bytes of a text file.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-office.lib"
            MENU_TITLE="Text Tool Applications Menu"
            DELIMITER="#MTT" #MTT This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MTT
            #
            f_menu_item_process $MTT  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error wc flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of Text Tool Applications case statement.
                 acheck' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Aa] | [Aa][Cc]*)
                 APP_NAME="acheck"
                 f_application_run
                 ;;
                 antiword' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Aa] | [Aa][Nn]*)
                 APP_NAME="antiword"
                 f_application_run
                 ;;
                 aspell' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Aa] | [Aa][Ss] | [Aa][Ss][Pp]*)
                 APP_NAME="aspell"
                 clear # Blank the screen.
                 echo "aspell - Spell checker"
                 echo
                 echo "Usage:" 
                 echo "aspell [OPTIONS] <COMMAND> ..."
                 echo
                 echo "*** For more help type: 'man $APP_NAME'"
                 echo "                        '$APP_NAME --help'"
                 echo
                 echo "Aspell application lists all words that are misspelled."
                 echo
                 echo -n "Enter name of text file to check spelling: "
                 read ANS
                 if [ -z $ANS ] ; then   #String has zero length.
                    echo
                    echo "Missing filename."
                    echo "Usage: aspell <filename>"
                    echo
                    f_press_enter_key_to_continue
                 elif [ -r $ANS ] ; then   #Filename exists and is readable.
                    APP_NAME="aspell -c $ANS"
                    f_application_run
                    PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 else
                    echo "The file $ANS is either missing or cannot be read."
                    f_press_enter_key_to_continue
                 fi
                 ;;
                 dict' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Dd] | [Dd][Ii] | [Dd][Ii][Cc] | [Dd][Ii][Cc][Tt])
                 APP_NAME="dict"
                 f_application_run
                 ;;
                 dictd' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Dd] | [Dd][Ii] | [Dd][Ii][Cc] | [Dd][Ii][Cc][Tt][Dd])
                 APP_NAME="dictd"
                 f_application_run
                 ;;
                 hunspell' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Hh] | [Hh][Uu]*)
                 APP_NAME="hunspell"
                 clear # Blank the screen.
                 echo "hunspell - Spell checker"
                 echo
                 echo "Usage:"
                 echo "hunspell [OPTIONS] [FILES]..."
                 echo
                 echo "Spell check file interactively."
                 echo "hunspell -d en_US filename.txt"
                 echo
                 echo "Spell check file in batch mode."
                 echo "cat myFile.txt | hunspell"
                 echo "hunspell -l myFile.txt"
                 echo
                 echo "Prevent showing an '*' asterick for each line."
                 echo "cat myFile.txt | hunspell -i utf-8 | grep -v \* | uniq"
                 echo
                 echo "List only misspelled words."
                 echo "cat myFile.txt | hunspell -l -i utf-8"
                 echo
                 echo "*** For more help type: 'man $APP_NAME'"
                 echo "                        '$APP_NAME --help'"
                 echo
                 echo -n "Enter name of text file to check spelling: "
                 read ANS
                 if [ -z $ANS ] ; then   #String has zero length.
                    clear # Blank the screen.
                    echo "Missing filename."
                    echo "Usage: hunspell <filename>"
                    echo
                    echo "Since no filename, now run 'hunspell' in interactive mode."
                    echo
                    echo "Interactive usage:"
                    echo
                    echo "Example: Type the sentence below"
                    echo "The wrong spelling is recieve, while the correct spelling is receive."
                    echo
                    echo "& recieve 8 22: receive, relieve, reprieve, retrieve, reverie, recitative,"
                    echo "Recife, receivable"
                    echo
                    echo "The word 'recieve' is repeated on the screen because it is mis-spelled."
                    echo "8=number of possible correct words."
                    echo "22+1=number of characters in line until misspelled word."
                    echo
                    echo "Now type the word(s) or sentence to spell check."
                    echo "If the word has the wrong spelling, it will be repeated on the screen."
                    echo "If the word has the correct spelling, an asterick '*' will appear."
                    echo
                    f_how_to_quit_application "Ctrl-d" "no-clear"
                    APP_NAME="hunspell"
                    f_application_run
                    PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 elif [ -r $ANS ] ; then   #Filename exists and is readable.
                    APP_NAME="hunspell $ANS"
                    f_application_run
                    PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 else
                    echo "The file $ANS is either missing or cannot be read."
                    f_press_enter_key_to_continue
                 fi
                 ;;
                 ispell' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Ii] | [Ii][Ss] | [Ii][Ss][Pp]*)
                 APP_NAME="ispell"
                 clear # Blank the screen.
                 echo "ispell - Spell checker"
                 echo
                 echo "Usage:" 
                 echo "ispell [OPTIONS] <COMMAND> ..."
                 echo
                 echo "Related packages:" 
                 echo "iamerican, iamerican-small, -large, -huge, -insane"
                 echo "ibritish, ibritish-small, -large, -huge, -insane"
                 echo
                 echo "*** For more help type: 'man $APP_NAME'"
                 echo "                        '$APP_NAME --help'"
                 echo
                 echo "Ispell application lists all words that are misspelled."
                 echo
                 echo -n "Enter name of text file to check spelling: "
                 read ANS
                 if [ -z $ANS ] ; then   #String has zero length.
                    echo
                    echo "Missing filename."
                    echo "Usage: ispell <filename>"
                    echo
                    f_press_enter_key_to_continue
                 elif [ -r $ANS ] ; then   #Filename exists and is readable.
                    APP_NAME="ispell $ANS"
                    f_application_run
                    PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 else
                    echo "The file $ANS is either missing or cannot be read."
                    f_press_enter_key_to_continue
                 fi
                 ;;
                 spell' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ss] | [Ss][Pp]*)
                 APP_NAME="spell"
                 clear # Blank the screen.
                 echo "spell - Spell checker"
                 echo
                 echo "Usage:"
                 echo "spell [OPTIONS] [FILE] ..."
                 echo
                 echo "*** For more help type: 'man $APP_NAME'"
                 echo "                        '$APP_NAME --help'"
                 echo
                 echo "Spell application lists all words that are misspelled."
                 echo
                 echo -n "Enter name of text file to check spelling: "
                 read ANS
                 if [ -z $ANS ] ; then   #String has zero length.
                    clear # Blank the screen.
                    echo "Missing filename."
                    echo "Usage: spell <filename>"
                    echo
                    echo "Since no filename, now run 'spell' in interactive mode."
                    echo
                    echo "Interactive usage:"
                    echo
                    echo "Example: Type the sentence below"
                    echo "The wrong spelling is recieve, while the correct spelling is receive"
                    echo
                    echo "recieve <<--spell responds with this word."
                    echo
                    echo "The word 'recieve' is repeated on the screen because it is mis-spelled."
                    echo
                    echo "Now type the word(s) or sentence to spell check."
                    echo
                    echo "If the word has the wrong spelling, it will be repeated on the screen."
                    echo "If the word has the correct spelling, it will not be repeated."
                    echo
                    f_how_to_quit_application "Ctrl-d" "no-clear"
                    APP_NAME="spell"
                    f_application_run
                    PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 elif [ -r $ANS ] ; then   #Filename exists and is readable.
                    APP_NAME="spell $ANS"
                    f_application_run
                    PRESS_KEY=1 # Display "Press 'Enter' key to continue."
                 else
                    echo "The file $ANS is either missing or cannot be read."
                    f_press_enter_key_to_continue
                 fi
                 ;;
                 wc' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Ww] | [Ww][Cc])
                 APP_NAME="wc"
                 clear # Blank the screen.
                 echo "wc - Word Count"
                 echo
                 echo "Usage:"
                 echo "wc [OPTIONS] [FILE]..."
                 echo
                 echo "-c, --bytes      prints the byte counts."
                 echo "-m, --chars      prints the character counts."
                 echo "-l  --lines      prints the new line counts."
                 echo "-w  --words      prints the word counts."
                 echo
                 echo "Example: Type the sentences below"
                 echo "Line 1 This is the first line."
                 echo "Line 2 This is the second Line."
                 echo "      2      14      63"
                 echo "    Lines   Words   Characters"
                 echo
                 echo
                 echo "*** For more help type: 'man $APP_NAME'"
                 echo "                        '$APP_NAME --help'"
                 echo
                 echo -n "Enter name of text file to check spelling: "
                 read ANS
                 if [ -z $ANS ] ; then   #String has zero length.
                    clear # Blank the screen.
                    echo "Missing filename."
                    echo "Usage: wc <filename>"
                    echo
                    echo "Since no filename, now run '' in interactive mode."
                    echo
                    echo "Interactive usage:"
                    echo
                    echo "Example: Type the sentences below"
                    echo "Line 1 This is the first line."
                    echo "Line 2 This is the second Line."
                    echo "      2      14      63"
                    echo "    Lines   Words   Characters"
                    echo
                    f_how_to_quit_application "Ctrl-d" "no-clear"
                    APP_NAME="wc"
                    f_application_run
                    PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 elif [ -r $ANS ] ; then   #Filename exists and is readable.
                    APP_NAME="wc $ANS"
                    f_application_run
                    PRESS_KEY=1 # Display "Press 'Enter' key to continue."
                 else
                    echo "The file $ANS is either missing or cannot be read."
                    f_press_enter_key_to_continue
                 fi
                 ;;
            esac                # End of Text Tool Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MTT=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of Text Tool Applications until loop.
            #
      unset MTT MENU_ITEM  # Throw out this variable.
} # End of f_menu_app_text_tools
#
# +----------------------------------------+
# |        Function f_menu_app_todo        |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MTD, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER, PRESS_KEY.
#
f_menu_app_todo () {
      f_initvars_menu_app
      until [ $MTD -eq 0 ]
      do    # Start of ToDo Applications until loop.
            #MTD diary    - Diary & To Do List uses grep, date, etc. with your text editor.
            #MTD diary-f  - Fork of "diary" enhanced "view"/"cat", non-latin locales.
            #MTD doneyet  - To-Do List.
            #MTD hnb      - To-Do List and note taker, ncurses-based application.
            #MTD org-mode - Emacs plugin for notes, ToDo lists, and project planning.
            #MTD tdl      - To Do List manager.
            #MTD todo     - To-Do List hierarchical. Install package 'devtodo'.
            #MTD todo2    - 'devtodo2' application is a todo2 list, 5-levels of priorties.
            #MTD tudu     - To-Do List hierarchical tasks.
            #MTD yaGTD    - To-Do List based on "Getting Things Done" methodology.
            #MTD yokadi   - Project/task manager which uses SQLite.
            #
            PRESS_KEY=1 # Display "Press 'Enter' key to continue."
            THIS_FILE="mod_apps-office.lib"
            MENU_TITLE="To-Do Applications Menu"
            DELIMITER="#MTD" #MTD This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu $MENU_TITLE $DELIMITER 
            #
            read MTD
            #
            f_menu_item_process $MTD  # Outputs $MENU_ITEM.
            f_application_help
            ERROR=0 # Reset error flag.
            APP_NAME="" # Set application name to null value.
            #
            case $MENU_ITEM in # Start of ToDo Applications case statement.
                 diary' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Dd] | [Dd][Ii] | [Dd][Ii][Aa] | [Dd][Ii][Aa][Rr] | [Dd][Ii][Aa][Rr][Yy])
                 APP_NAME="diary"
                 f_application_run
                 ;;
                 diary-f' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Dd] | [Dd][Ii] | [Dd][Ii][Aa] | [Dd][Ii][Aa][Rr] | [Dd][Ii][Aa][Rr][Yy] | [Dd][Ii][Aa][Rr][Yy][-] | [Dd][Ii][Aa][Rr][Yy][-][Ff])
                 APP_NAME="diary-f"
                 f_application_run
                 ;;
                 doneyet' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Dd] | [Dd][Oo]*)
                 APP_NAME="doneyet"
                 f_application_run
                 ;;
                 hnb' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 [Hh] | [Hh][Nn]*)
                 APP_NAME="hnb"
                 f_application_run
                 PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
                 ;;
                 org-mode' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Oo] | [Oo][Rr]*)
                 APP_NAME="org-mode"
                 f_application_run
                 ;;
                 tdl' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Tt] | [Tt][Dd]*)
                 APP_NAME="tdl"
                 f_application_run
                 ;;
                 todo' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Tt] | [Tt][Oo] | [Tt][Oo][Dd] | [Tt][Oo][Dd][Oo])
                 APP_NAME="todo"
                 clear # Blank the screen.
                 echo "todo - Simple To-Do list using hidden file .todo as a database list."
                 echo
                 echo "todo [OPTIONS]"
                 echo "       With no options, displays the items in the current directory."
                 echo
                 echo "tda [-p <priority>] [-g <index>] [<text>]"
                 echo "      Add a new item, optionally grafting it as a child of the given item."
                 echo "tde <index>"
                 echo "     Edit the given item."
                 echo "tdr <indices>"
                 echo "     Remove the given items."
                 echo "tdd <indices>"
                 echo "     Mark the specified items as being done."
                 echo
                 echo "*** For more help type: 'man $APP_NAME'"
                 echo "                        '$APP_NAME --help'"
                 echo
                 echo "todo -a to add a new note, todo -A -all to show all notes."
                 echo 
                 echo "Now run todo. Usage: todo"
                 f_press_enter_key_to_continue
                 f_application_run
                 ;;
                 todo2' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Tt] | [Tt][Oo] | [Tt][Oo][Dd] | [Tt][Oo][Dd][Oo] | [Tt][Oo][Dd][Oo]2)
                 APP_NAME="todo2"
                 clear # Blank the screen.
                 echo "devtodo2 - To-Do list with 5-levels of priorities."
                 echo
                 echo "***Note: Run using 'todo2' command.***"
                 echo "         Application name is devtodo2".
                 echo
                 echo "todo2 [OPTIONS]"
                 echo "       With no options, displays the items in the current directory."
                 echo
                 echo "Add a Task: 
                 echo "todo2 -a <Task description> "
                 echo            
                 echo "Add a task as a child of an existing task:"
                 echo "todo2 -g 2 -a This is a child of task 2."
                 echo
                 echo "List all tasks:"
                 echo "todo2 -A
                 echo
                 echo "Mark a task as complete:"
                 echo "todo2 -d 1.2"
                 echo
                 echo "*** For more help type: 'man todo2'"
                 echo "                        'todo2 --help'"
                 echo
                 echo "Now run devtodo2. Usage: todo2"
                 f_press_enter_key_to_continue
                 f_application_run
                 ;;
                 tudu' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Tt] | [Tt][Uu]*)
                 APP_NAME="tudu"
                 f_application_run
                 ;;
                 yagtd' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Yy] | [Yy][Aa]*)
                 APP_NAME="yagtd"
                 f_application_run
                 ;;
                 yokadi' '*)
                 APP_NAME=$MENU_ITEM
                 f_application_run
                 ;;
                 [Yy] | [Yy][Oo]*)
                 APP_NAME="yokadi"
                 f_application_run
                 ;;
            esac                # End of ToDo Applications case statement.
            #
            # Trap bad menu choices, do not echo Press enter key to continue.
            f_bad_menu_choice $MENU_ITEM  # Outputs $MENU_ITEM.
            #
            MTD=$MENU_ITEM
            #
            # If application displays information, allow user to read it.
            f_option_press_enter_key
            #
      done  # End of ToDo Applications until loop.
            #
      unset MTD MENU_ITEM  # Throw out this variable.
} # End of f_menu_app_todo
#
