#!/bin/bash
#
# This program, README is under copyright.
# Â©2013 Copyright 2013 Robert D. Chin (rdchin at yahoo.com).
#
# Usage: sh README
#
#: +----------------------------------------+
#: |    Revision number and Revision Date   |
#: +----------------------------------------+
#:
#: Calculate revision number by counting all lines starting with "## 2013".
#: grep ^ (carot sign) means grep any lines beginning with "##2013".
#: grep -c means count the lines that match the pattern.
#:
#: REVISION=$(grep ^"## 2013" -c EDIT_HISTORY) ; REVISION="2013.$REVISION"
# REVDATE="December-17-2013 11:32"
#:
#: After each edit made, update the version (date stamp string) of each affected
#: file along with the EDIT_HISTORY file which contains the project rev date.
#: Also update the edit history text in the EDIT_HISTORY file.
#:
clear
THIS_FILE="README"
# sed substitutes null for #: at beginning of each line so it is not printed..
# less -P customizes prompt for %f <FILENAME> page <num> of <pages> (Spacebar, PgUp/PgDn . . .)
sed -n 's/^#://'p $THIS_FILE | less -P %f'  page '%dB' of '%D'  (Spacebar, PgUp/PgDn, Up/Dn arrows, press q to quit)' $THIS_FILE
#
# The "#:" at the beginning of lines below are used 
# to delineate the Help Instructions.
#
#: +----------------------------------------+
#: |            Table of contents           |
#: +----------------------------------------+
#:
#:   Brief Description
#:   HOW-TO Install this script
#:   FILE LOCATIONS of cliappmenu project
#:   Why did I write this script?
#:   Why is this menu so complex?
#:   Script features
#:   HOW-TO Add a new menu item
#:   Trouble-shooting a new menu item
#:   Known problems and limitations
#:   For more help
#:   List of variables
#:   List of Special Menu Item Markers
#:
#:
#: +----------------------------------------+
#: |            Brief Description           |
#: +----------------------------------------+
#:
#: Script cliappmenu.sh is a menu of CLI applications and commands
#: to help CLI newbies to discover what a command line can do.
#:
#: The typical user is anyone who wants to learn about what types of
#: command line applications are available.
#:
#: Admittedly, the some of the files for this script are big 50-100 KB,
#: and this script has not been tested on PCs slower than 1 GHz.
#:
#: Start by downloading the file "cliappmenu.sh" and follow the instructions
#: to install the application.
#:
#: You can either download all the script project files at once, or
#: just download the file "cliappmenu.sh" and use the script to interactively
#: download just the features you wish to use.
#:
#:
#: +----------------------------------------+
#: |       HOW-TO Install this script       |
#: +----------------------------------------+
#:
#: The simplest method to install is to download the file "cliappmenu.sh"
#: to the directory of your choice. This is the main script file.
#:
#: Run the script by typing "bash cliappmenu.sh".
#: 
#: When running the script for the first time, the mini-installer will
#: automatically download any required library files.
#:
#: Additional software library module files will be downloaded on-demand.
#:
#: If you wish, you may also download all the files at once and then
#: decide which library module files you wish to discard.
#:
#: +----------------------------------------+
#: | FILE LOCATIONS of cliappmenu project |
#: +----------------------------------------+
#:
#: The main script, cliappmenu.sh may be located in a different directory
#: from the rest of the files, if you wish. Or you can put all files in the
#: same folder/directory.
#:
#: Common locations: User's home directory /home/<username>, /usr/local/bin,
#:                   /opt directories.
#:
#: Specify the folder/directory where the script cliappmenu.sh file
#: resides by setting $MAINMENU_DIR variable within function
#: f_initvars_menu_app in the script file, cliappmenu.sh.
#: _______________________________
#:
#: You may have all the script's files in a single directory or have the
#: library files and support files in their own separate directory from
#: the "cliappmenu.sh" script file.
#:
#: If you want to use the optional suggested default directory:
#: /<MAINMENU_DIR>/cli-app-menu
#: it should contain files: EDIT_HISTORY, COPYING, README, LIST_APPS,
#: library files (lib_cli-*.lib) and module library files (mod-apps*.lib).
#:
#: Specify the folder/directory where the library and module library files
#: reside by setting $THIS_DIR variable within function f_initvars_menu_app
#: in the script file, cliappmenu.sh.
#: _______________________________
#:
#: The configuration file: .cliappmenu.cfg 
#: is a hidden file which resides in the user's home directory.
#: _______________________________
#:
#:
#: Append the directory name to your environment $PATH:
#: Edit your /home/<username goes here>/.bashrc file and add the directory by
#: adding the lines to the end of the .bashrc file,
#:                   PATH=$PATH:~/bin/cli-app-menu
#:                   export PATH
#:
#: When cliappmenu.sh is run i.e. "bash cliappmenu.sh",
#: then you can download selected module files, "mod_apps-*.lib."
#: The module files contain sub-menus of various applications.
#: A list of applications is in LIST_APPS.
#:
#: You may download all or as few module files as you wish.
#: You may delete any module files that you do not need.
#:
#:
#: +----------------------------------------+
#: |      Why did I write this script?      |
#: +----------------------------------------+
#:
#: I wrote this script for 3 reasons:
#: 1. I wanted a categorized list of command line applications.
#: 2. I wanted to learn bash scripting, i.e. functions, looping, tests.
#: 3. I couldn't find a cli menu to launch cli apps on the web so I thought I'd
#:   give back to the community and perhaps others could build on and improve on
#:   what I've started.
#:
#: Please enjoy . . . bob chin (2013).
#:                    rdchin at yahoo.com.
#:
#:
#: +----------------------------------------+
#: |      Why is this menu so complex?      |
#: +----------------------------------------+
#:
#: *The menus are designed to be quite extensible and are easily edited.
#:
#: *Menu item choices are added with a simple comment line.
#:
#: Why not use the select command? Why not be a lazier pattern matcher?
#:
#: *I used to be a MUMPS programmer and QA analyst.
#:
#: *I used to create menus in this style in MUMPS and being a QA person, my job
#:  was to try to break programs. So that's why I tried to make pattern matching
#:  so robust rather than use wild-cards.
#:
#:       Update: Now instead of case statements, I am using wild-cards with this
#:               expression that I found when searching the internet.
#:
#:       i.e. "nslookup" contains "nsl"*.
#:       [[ "$MENU_ITEM_NAME" == "$MENU_ITEM"* ]]
#:
#:       i.e. "nslookup www.distrowatch.com" contains "nslookup".
#:       i.e. "apt-file" does not contain "apt " ( "apt"<SPACE> ).
#:       [[ "$MENU_ITEM" == "$MENU_ITEM_NAME "* ]]
#:
#:       Please see function "f_menu_item_valid"
#:       in library module "lib_cli-common.lib."
#:
#: *My QA background also explains this crazy documentation of everything along
#:  with the fact that I am just learning bash scripting.
#:
#:
#: +----------------------------------------+
#: |             Script features            |
#: +----------------------------------------+
#:
#: *Optimized for 80x24 display or 640x480 pixel displays.
#:  Run-time displayed text is no wider than 80-columns across.
#:  Run-time menus are no longer than 16 items for 24 row displays.
#:  Although the game, "Pacman for Console" needs 32 rows minimum to play.
#:
#: *You can get application help by 'man' or '--help' from the menu prompt.
#:
#: *If an application is not installed, the script can install it using package
#:  managers apt, rpm, slackpkg, pacman or for specific apps, download it from
#:  a web site for manual installation.
#:
#: *If an application needs sudo, script will automatically give a sudo option.
#:
#: *Designed for ease of extensibility and menu editing. No menu item numbers,
#:  and no custom pattern matching is required for each menu item added.
#:
#: *Menu item option numbers in menu display are automatically generated.
#:
#: *More fun than just a list of CLI applications!!!
#:
#:
#: +----------------------------------------+
#: |       HOW-TO Add a new menu item       |
#: +----------------------------------------+
#:
#: New category menus are in the file lib_cli-menu-cat.lib.
#: The template to add a new category menu is:     f_menu_cat_sample_template
#: The template to add a new sub-category menu is: f_menu_scat_sample_template
#:
#: New application menus are in the file lib_cli-menu-apps.lib.
#: The template to add a new application menu is:  f_menu_app_sample_template
#:
#: In brief:
#
#: 1. The menu code is contained in functions with example templates. 
#:
#: 2. If you are adding a NEW APPLICATION within an application menu,
#:    a) An application menu can have a **MAXIMUM OF 16** items.
#:       If you have more, please create a new sub-menu or sub-category menu.
#:       This is to comply with a 80x24 line screen which is standard.
#:    b) decide what row in the menu that you want to place the new menu item.
#:    c) Add the new menu item see below for menu format details.
#:    d) Each Special Menu Option Marker MUST be unique for each menu.
#:
#:    Note: Please see bottom of this document
#:          for a list of Special Menu Item Markers.
#:
#:    e) Create a menu item and possibly any custom functions to go along with it.
#:       Example:
#:    f_menu_cat_sample_template () {
#:          f_initvars_menu_app "BXX"
#:          until [ "$BXX" = "0" ]
#:          do    # Start of <Sample Template> Application Category until loop.
#:    #0^0^0^0^0 #MXX appname1  - Description Application1 name.
#:    #1^0^0^0^1 #MXX appname2  - Description Application2 name.
#:    #0^1^0^3:NC^0 #MXX appname3  - Description Application3 name.
#:
#:    appname1 - Has no custom functions to run before running application, appname1.
#:    appname2 - Has a custom function f_appname2 to run before running application, appname2.
#:               Will display a "Press 'Enter' key to continue." message after running appname2.
#:    appname3 - Custom install function, f_install_appname3 will run before running appname3.
#:               Custom install functions run if the distro's software package manager fails to
#:               install the application if it is missing. Usually the custom install function
#:               will download, compile source code from the software maintainer's web site.
#:
#:               A Quit-Code "3:NC" means display message below without clearing screen:
#:                                To quit "appname3", type "Q" or <F10>
#:
#:    f) Format of Menu: 
#: <Menu item options> <SPACE> <Special menu item marker> <SPACE> 
#: <Application name> <SPACE> - <SPACE> <Description>.
#:
# Format of menu item options:
# "#f_funct1^f_funct2^f_funct3^Quit-Code^PRESS_KEY #MXX App Name - Description of application."
#   field-1  field-2  field-3  field-4   field-5   Marker 
#
# field 1    *if 1 then function name is f_<MENU_ITEM_NAME>.
# 1/0/string *if <string> then function name is <string>.
#            *if 0 then ignored. No function is run.
#
# field 2    *if 1 then function name is f_install_<MENU_ITEM_NAME>.
# 1/0/string  A function to install an application may be specified here.
#            *if <string> then function name is <string>.
#            *if 0 then ignored. No function is run.
#
#             This custom installation function is called only after the distro's software
#             package manager has failed to install the application usually because the
#             application is not pre-packaged for the linux distro (distribution).
#             See f_application_install for more details.
#
#             If install fails, then this custom install function will be run which can be
#             made to download the source code from the application maintainer's web site
#             and then compile and install the application.
#
# field 3    *if <string> then function name is <string>.
# 0/string   *if 0 then ignored. No function is run.
#             This function is run after displaying the Quit-Code the on screen.
#
# field 4    *Quit-Code. See f_quit_app_clause for more details.
# string
#
# field 5    *Sets PRESS_KEY=0/1 to display "Press 'Enter' key to continue".
# 1/0         See f_press_key for more details. This allows the user to see any messages displayed
#             by the application after it has been run. Without PRESS_KEY=1, the screen is cleared
#             for the menu to display and the user would miss any messages.
#
#             This setting may be overridden by any custom functions which follow.
#             It is useful if the custom function displays a help message or man synopsis
#             so you don't have to worry about coding for PRESS_KEY within that custom function.
#
#             This can be used to initialize PRESS_KEY as it is set before any custom functions
#             in fields 1, 2, or 3 are run.
##:    g) Update the file LIST_APPS by selecting "Configure" THEN "LIST_APPS"
#:       in the Main Menu. LIST_APPS is used by the Main Menu item "List
#:       Applications" to show a list of all applications available whether
#:       the app module is downloaded or not.
#:
#: 3. If you are adding a NEW CATEGORY or SUB-CATEGORY menu, please create them
#:    within the appropriate module file mod_apps-*.lib and please use the
#:    templates for this very purpose available in mod_apps_sample_template.
#:    Template: f_menu_scat_sample_template.
#:
#: 4. If you are creating a NEW MAJOR CATEGORY, 
#:    a) Create a new corresponding module file, mod_apps-*.lib.
#:       Use template f_menu_scat_sample_template to create the menu structure.
#:    b) Add the new menu item in lib_cli-menu-cat.lib.
#:    c) ALSO UPDATE the README file, "List of Special Menu Item Markers".
#:    d) Update the function f_create_LIST_APPS within lib_cli-common.lib with
#:       the name of the new module file so that the text file LIST_APPS can be
#:       re-created.
#:    e) Edit functions f_ask_which_module_download, f_module_match in 
#:       file lib_cli-common.lib.
#:
#: 5. The file LIST_APPS may be automatically updated by copying all the 
#:    mod_apps-*.lib files to the current directory and by selecting
#:    "Configure" then "LIST_APPS" in the Main Menu.
#:
#:
#: +----------------------------------------+
#: |   Trouble-shooting a new menu item     |
#: +----------------------------------------+
#:
#: 1. Some or all of the menu items are missing.
#:
#:    If you copied from a template or another menu, check the markers.
#:    Check the Special Menu Item Markers for consistency.
#:    In the example below, #MXX is before each menu item and in DELIMITER.
#:    Note: DELIMITER has #MXX twice, separating it into 3 fields for awk.
#:
#:     Example: "MXX" is the Special Menu Item Marker and must be consistently used.
#:              In this example app2name (with "MXY") will not appear in the menu.
#:
#:    f_initvars_menu_app "MXX"
#:    until [ "$MXX" = "0" ]
#:          #MXX appname  - Description Application1 name.
#:          #MXY app2name - Description Application2 name.
#:    DELIMITER="#MXX" #MXX This 3rd field prevents awk from printing this line into menu options. 
#:    read MXX
#:    f_menu_item_process $AEE  # Outputs $MENU_ITEM.
#:    unset MXX MENU_ITEM  # Throw out this variable.
#:
#: 2. Impossible to exit a menu.
#:
#:    *Somewhere in the mod_apps-*.lib file, there is a syntax error.
#:    *Check the Special Menu Item Markers for consistency. (See point 1 for details).
#:     Example: If "unset MXY" instead of "unset MXX" then exit menu using "(R)eturn" will not work,
#:              while "0" (zero) will still exit the menu.
#:
#: 3. Strange menu results, menu does not display.
#:    *If you forget the closing "}" to a function, you'll get strange results.
#:    *If you forget a comment "#" marker i.e. "} End of function", then menu
#:     may not even display.
#:
#: 4. Only a few of the Menu items display when the number or letter is selected.
#:    Check any instance of echo with only a single double-quotation mark.
#:    Change from: echo "I forgot to type in the trailing double-quote.
#:    Change   to: echo "I forgot to type in the trailing double-quote."
#:
#:
#: +----------------------------------------+
#: |     Known problems and limitations     |
#: +----------------------------------------+
#:
#: 1. All associated files for this script must be in the same folder,
#:    except for cliappmenu.sh which may be in a separate folder. 
#:
#: 2. f_choice_array needs all menu items to have 1 or 2 unique words in a name
#:    within the same menu.
#:
#:    i.e. Acceptable names for a menu    Unacceptable names for a menu 
#:
#:      WAN Applications Menu          WAN Applications Menu
#:      ip route                       ip route list
#:                                     ip route flush
#:
#: 3. Option for automatic software installation only for distributions which
#:    use apt, rpm, slackpkg, and pacman; all others must install manually.
#:
#: 4. For Slackware-based distros which use slackpkg, even though you can
#:    install software, I have not figured out a way to determine if
#:    "slackpkg install <package name> was successful or not. 
#:    The command results in error code zero $?=0 even if install fails.
#:    As a result, I commented out the code which traps slackpkg installation
#:    errors, shows an error message and asks if you want to download the
#:    source code from the developer's web site.
#:
#:
#: +----------------------------------------+
#: |               For more help            |
#: +----------------------------------------+
#:
#: Please refer to the "Main Menu" of the script.
#:
#: *How to get help on an application is under "Help and Features".
#:
#: *Programming help and notes are under "Documentation" 
#:
#: *There are also example templates to create additional category and app menus
#:  within the script.
#:
#:
#: +----------------------------------------+
#: |            List of variables           |
#: +----------------------------------------+
#:
#: ANS           - String; Answer to question.
#: APP_NAME      - String; application name also command to run.
#: APP_NAME_INSTALL - String; used when APP_NAME does not match actual package
#:                 name to be installed. i.e. APP_NAME="trek" but package name is
#:                 actually "bsdgames". So to install "trek" game, you must
#:                 instead install package "bsdgames", a collection of games.
#: APP_NAME_SUDO - String; just app name when APP_NAME starts with sudo.
#: APP_NAME_TMP  - String; just app name when APP_NAME has options-params.
#: APP_RUN       - String; Command to run when application is a web browser,
#:                 actually also includes name of web site to browse.
#: BCOLOR        - String; Background color of display terminal; Black, blue, white.
#: CHOICE[XNUM]  - Array of string elements. User choice in Applications and
#:                 Category Menus where XNUM is a number.
#: M[A-Z][A-Z]   - String; User choice in Applications Menu (alpha-numeric).
#:                 First few letters of user choice from menu.
#:                 ' 0' means quit menu.
#:                 '-1' stay in menu loop, display "Press enter key to continue."
#: B[A-Z][A-Z]   - String; User choice in Applications Category Menu (alpha-
#:                 numeric).
#:                 ' 0' means quit menu.
#:                 '-1' stay in menu loop, legitimate choice.
#: DELIM         - String; Delimiter prefix without the hash "#" mark.
#: DELIMITER     - String; Delimiter prefix of menu option string.
#: ERROR         - Number; Save error code number from $? function.
#: ECOLOR        - String; Font color of error messages.
#: FCOLOR        - String; Font color of display terminal.
#: INSTALL_ANS   - String; YES/NO Does user want to install app?
#:                 Passed from f_application_error to f_application_run.
#: MAINMENU_DIR  - Directory containing cliappmenu.sh.
#: MAX           - Number; Maximum option choice number in menu.
#: MENU_ITEM     - String; User choice, f_menu_item_process (alpha-numeric).
#:                 ' 0' means quit menu.
#:                 '-1' stay in menu loop, legitimate choice.
#: MENU_TITLE    - String; Title of menu.
#: MOD_FILE      - Module file name.
#: NEW_DIR       - String; New directory to be created.
#: PRESSKEY      - Number: Ask "Press Enter key to continue".
#:                 '0' Do not ask "Press Enter key to continue".
#:                 '1' Ask "Press Enter key to continue".
#: REVDATE       - String; Revision date of shell script.
#: REVISION      - String; Revision number of shell script.
#: THIS_DIR      - Directory containg library modules and support files.
#: THIS_FILE     - String; name of shell script.
#: UCOLOR        - Font color for unavailable library modules in Application Category Menu.
#: WEB_SITE      - String; name of web site used when application is a web browser.
#: WEB_SITE_INSTALL - String; name of web site used to install software.
#: X             - String; Scratch variable.
#: XNUM          - Number; Scratch variable used in awk statement in f_show_menu
#:                 and in CHOICE[XNUM] array.
#: XSTR          - String; Scratch variable.
#: XXSTR         - String; Scratch variable.
#: YSTR          - String; Scratch variable.
#:
#:
#: +----------------------------------------+
#: |   List of Special Menu Item Markers    |
#: +----------------------------------------+
#:
#:AAA - Main Menu
#:AAB - Application Categories Menu
#:AAB - Library Module Management Menu
#:AAC - Configuration Menu
#:AAD - File/Directory Validation Menu
#:AAE - Terminal Colors Menu
#:AAF - Colors for Unavailable Menu Items
#:
#:BAU - Audio-Video Categories Menu
#:BFM - File Management Categories Menu
#:BGA - Game Categories Menu
#:BIG - Image Categories Menu
#:BIN - Internet Categories Menu
#:BNE - Network Categories Menu
#:BNM - Network Monitor Categories Menu
#:BOF - Office Categories Menu
#:BSY - System Categories Menu
#:BTX - Text Categories Menu
#:BXC - Sample Template Categories Menu
#:
#:MAA - Accounting Applications Menu
#:MAC - Audio CD Ripper Applications Menu
#:MAN - Audio Player1 Applications Menu
#:MAO - Audio Player2 Applications Menu
#:MAP - Audio Player3 Applications Menu
#:MAQ - Audio Player4 Applications Menu
#:MAR - Audio Radio Applications Menu
#:MAS - Audio Speech Synthesis Applications Menu
#:MAT - Audio Music Tagger Applications Menu
#:MAU - Audio Editor Applications Menu
#:MBH - Bin-Hex Editor Applications Menu
#:MBL - Blog Client Menu
#:MBT - Bittorrent Applications Menu
#:MCA - Calendar Applications Menu
#:MCB - Calendar2 Applications Menu
#:MCC - Calculator Applications Menu
#:MCL - Clock Applications Menu
#:MCO - Contact List Applications Menu
#:MDB - Database Applications Menu
#:MDE - Development Applications Menu
#:MDL - Dowloader Applications Menu
#:MED - Education Applications Menu
#:MEM - E-mail Applications Menu
#:MFA - File Burn CD/DVD Applications Menu
#:MFB - File Compression Applications Menu
#:MFC - File Compression2 Applications Menu
#:MFD - File Deletion/Undeletion Applications Menu
#:MFE - File Encryption Applications Menu
#:MFF - File Search and find Applications Menu
#:MFG - File Checksum Applications Menu
#:MFH - File Move-Copy Applications Menu
#:MFI - File Backup Applications Menu
#:MFM - File Manager Applications Menu
#:MFO - File Operations Applications Menu
#:MFS - File Splitter Applications Menu
#:MFT - File Transfer Applications Menu
#:MFV - File Viewer Applications Menu
#:MFX - FAX Applications Menu
#:MGA - Arcade Games Menu
#:MGB - Arcade2 Games Menu
#:MGC - Board Games Menu
#:MGD - Card Games Menu
#:MGE - MUD (Multi-user Dungeons) Menu
#:MGF - Puzzles Menu
#:MGG - Quiz Menu
#:MGH - RPG (Role-Playing Games) Menu
#:MGI - Simulation Games Menu
#:MGJ - Strategy Games Menu
#:MGK - Word Games Menu
#:MGL - Tetris Games Menu
#:MGM - Pac-Man Games Menu
#:MHR - Ham Radio Applications Menu
#:MIG - Image-Graphics Applications Menu
#:MIH - Image-Graphics2 Applications Menu
#:MIK - ImageMagick Applications Menu
#:MIM - Instant Messaging Applications Menu
#:MIR - Internet Relay Chat (IRC) Applications Menu
#:MLO - System Log Applications Menu
#:MMA - Mathematics Application Menu
#:MNB - Network Bandwidth Applications Menu
#:MNC - LAN Chat Applications Menu
#:MNF - Firewalls Applications Menu
#:MNL - LAN Applications Menu
#:MNM - Network Monitor Applications Menu
#:MNN - NIC Diagnostic Tools Applications Menu
#:MNO - Note Applications Menu
#:MNP - Network Packet Applications Menu
#:MNR - News Reader Applications Menu
#:MNS - Network Sharing Applications Menu
#:MNW - WAN Applications Menu
#:MPO - Podcatcher Applications Menu
#:MPR - Presentation Applications Menu
#:MPS - PDF-PS Applications Menu
#:MPT - PDF-PS2 Applications Menu
#:MRC - Remote Connection Applications Menu
#:MRS - RSS News Feeder Applications Menu
#:MSB - System Backup Applications Menu
#:MSC - System Screen Applications Menu
#:MSD - System Disk Information Applications Menu
#:MSF - System Software Package Applications Menu
#:MSH - System Health Applications Menu
#:MSI - System Mainboard Information Applications Menu
#:MSL - System Peripherals Information Applications Menu
#:MSM - System Monitor Applications Menu
#:MSN - System Monitor2 Applications Menu
#:MSO - System Other Applications Menu
#:MSP - Spreadsheet Applications Menu
#:MSR - System Process Applications Menu
#:MSS - Screen-saver Applications Menu
#:MTC - Text Compare Applications Menu
#:MTD - To-Do Applications Menu
#:MTE - Text Editor Applications Menu
#:MTF - Text Editor2 Applications Menu
#:MTG - Text Editor3 Applications Menu
#:MTH - Text File Editor Applications Menu
#:MTM - Text Markup Language Applications Menu
#:MTT - Text Tool Applications Menu
#:MTV - Text Converter Applications Menu
#:MTW - Text File Conversion Applications Menu
#:MVE - Video Editor Applications Menu
#:MVI - Video Player/Downloader Applications Menu
#:MWB - Web Browser Applications Menu
#:MXX - Sample Template Applications Menu
